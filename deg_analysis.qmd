---
title: "Short vs. long RNA-seq (differentiation over timecourse)"
author: "Michel Tarnow"
date: today
format: 
    html:
      toc: true
      self-contained: true
      highlight-style: github
      code-line-numbers: true
editor_options: 
    chunk_output_type: inline
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Load packages

```{r message=FALSE, warning=FALSE}
library(tidyverse)
library(RColorBrewer)
library(edgeR)
library(UpSetR)
library(viridis)
library(pheatmap)
library(gplots)
library(fgsea)
library(msigdbr)
```

## Load data

The data is loaded from RDS-objects that have been created with the `import_processing.qmd` file. For each of the 4 NDR cutoffs (0.025, 0.05, 0.1, 0.2), two data frames exist containing the expression data (counts) of the two different technologies used to obtain the data:

1. Illumina sequencing and Salmon quantification (short read)
2. PacBio sequencing and Bambu quantification (long read)

In total, this adds up to 8 different data frames. Each of these data frames contains 11 samples, which are replicates from one of five different time points.

```{r}
df_list_bambu <- readRDS("../bambu.rds")
df_list_salmon <- readRDS("../salmon.rds")
df_list_meta <- readRDS("../meta.rds")
```

```{r}
bambu_0.025_gene <- df_list_bambu$bambu_0.025_gene
bambu_0.05_gene <- df_list_bambu$bambu_0.05_gene
bambu_0.1_gene <- df_list_bambu$bambu_0.1_gene
bambu_0.2_gene <- df_list_bambu$bambu_0.2_gene

salmon_0.025_gene <- df_list_salmon$salmon_0.025_gene
salmon_0.05_gene <- df_list_salmon$salmon_0.05_gene
salmon_0.1_gene <- df_list_salmon$salmon_0.1_gene
salmon_0.2_gene <- df_list_salmon$salmon_0.2_gene

(meta_samples <- df_list_meta$metadata)
```

## Create DGEList objects and filter expressed genes

The expression data is then filtered using the function `filterByExpr` to exclude genes that do not show high enough expression or do not show expression in enough samples.

```{r}
day <- factor(meta_samples$time)
```

### 0.025

```{r}
y_salmon_0.025 <- DGEList(counts = salmon_0.025_gene, group = day)
y_bambu_0.025 <- DGEList(counts = bambu_0.025_gene, group = day)

expressed_salmon <- filterByExpr(y_salmon_0.025)
expressed_bambu <- filterByExpr(y_bambu_0.025)

not_expressed <-
  intersect(names(expressed_salmon[!expressed_salmon]), names(expressed_bambu[!expressed_bambu]))

if (length(not_expressed) > 0) {
  y_salmon_0.025 <-
    y_salmon_0.025[-which(rownames(salmon_0.025_gene) %in% not_expressed), , keep.lib.sizes = FALSE]
  y_bambu_0.025 <-
    y_bambu_0.025[-which(rownames(bambu_0.025_gene) %in% not_expressed), , keep.lib.sizes = FALSE]
}
```

### 0.05

```{r}
y_salmon_0.05 <- DGEList(counts = salmon_0.05_gene, group = day)
y_bambu_0.05 <- DGEList(counts = bambu_0.05_gene, group = day)

expressed_salmon <- filterByExpr(y_salmon_0.05)
expressed_bambu <- filterByExpr(y_bambu_0.05)

not_expressed <-
  intersect(names(expressed_salmon[!expressed_salmon]), names(expressed_bambu[!expressed_bambu]))

if (length(not_expressed) > 0) {
  y_salmon_0.05 <-
    y_salmon_0.05[-which(rownames(salmon_0.05_gene) %in% not_expressed), , keep.lib.sizes = FALSE]
  y_bambu_0.05 <-
    y_bambu_0.05[-which(rownames(bambu_0.05_gene) %in% not_expressed), , keep.lib.sizes = FALSE]
}
```

### 0.1

```{r}
y_salmon_0.1 <- DGEList(counts = salmon_0.1_gene, group = day)
y_bambu_0.1 <- DGEList(counts = bambu_0.1_gene, group = day)

expressed_salmon <- filterByExpr(y_salmon_0.1)
expressed_bambu <- filterByExpr(y_bambu_0.1)

not_expressed <-
  intersect(names(expressed_salmon[!expressed_salmon]), names(expressed_bambu[!expressed_bambu]))

if (length(not_expressed) > 0) {
  y_salmon_0.1 <-
    y_salmon_0.1[-which(rownames(salmon_0.1_gene) %in% not_expressed), , keep.lib.sizes = FALSE]
  y_bambu_0.1 <-
    y_bambu_0.1[-which(rownames(bambu_0.1_gene) %in% not_expressed), , keep.lib.sizes = FALSE]
}
```

### 0.2

```{r}
y_salmon_0.2 <- DGEList(counts = salmon_0.2_gene, group = day)
y_bambu_0.2 <- DGEList(counts = bambu_0.2_gene, group = day)

expressed_salmon <- filterByExpr(y_salmon_0.2)
expressed_bambu <- filterByExpr(y_bambu_0.2)

not_expressed <-
  intersect(names(expressed_salmon[!expressed_salmon]), names(expressed_bambu[!expressed_bambu]))

if (length(not_expressed) > 0) {
  y_salmon_0.2 <-
    y_salmon_0.2[-which(rownames(salmon_0.2_gene) %in% not_expressed), , keep.lib.sizes = FALSE]
  y_bambu_0.2 <-
    y_bambu_0.2[-which(rownames(bambu_0.2_gene) %in% not_expressed), , keep.lib.sizes = FALSE]
}
```

```{r}
dim(y_salmon_0.025) == dim(y_bambu_0.025)
dim(y_salmon_0.05) == dim(y_bambu_0.05)
dim(y_salmon_0.1) == dim(y_bambu_0.1)
dim(y_salmon_0.2) == dim(y_bambu_0.2)
```

## Differential gene expression analysis

The differential gene expression analysis aims to identify genes that are differentially expressed over the time course. These results are computed for all 4 NDR cufoffs of both technologies, and are then overlayed for each NDR cutoff to compare the two technologies, so the long read and short read sequencing.

The design matrix is created in a way that the first time point, `day0`, is used as a baseline (intercept of the model).

```{r}
# create design matrix
design <- model.matrix( ~ day)
design
```

### 0.025

The first NDR cutoff is 0.025. The differential expression analysis is performed with `edgeR`, and genes are considered as differentially expressed if the adjusted p-value of the log-likelihood test between the full and the reduced model is below 0.01. The p-value adjustment is performed using the Benjamini-Hochberg method.

```{r}
# Salmon 0.025
y_salmon_0.025 <- calcNormFactors(y_salmon_0.025)
## estimate dispersion
y_salmon_0.025 <- estimateDisp(y_salmon_0.025, design)
## fit the negative binomial model
fit <- glmFit(y_salmon_0.025, design)
## conduct genewise statistical tests for a given coefficient contrast (coef = row of design matrix)
lrtS <- glmLRT(fit, coef = 2:6)
#topTags(lrt)
## multiple testing correction
decide_dif_s0.025 <-
  decideTests.DGELRT(lrtS,
                     adjust.method = "BH",
                     p.value = 0.01)
summary(decide_dif_s0.025)

# Bambu 0.025
y_bambu_0.025 <- calcNormFactors(y_bambu_0.025)
## estimate dispersion
y_bambu_0.025 <- estimateDisp(y_bambu_0.025, design)
## fit the negative binomial model
fit <- glmFit(y_bambu_0.025, design)
## conduct genewise statistical tests for a given coefficient contrast (coef = row of design matrix)
lrtB <- glmLRT(fit, coef = 2:6)
#topTags(lrt)
## multiple testing correction
decide_dif_b0.025 <-
  decideTests.DGELRT(lrtB,
                     adjust.method = "BH",
                     p.value = 0.01)
summary(decide_dif_b0.025)
```

For Illumina+Salmon, out of the 24717 tested genes, 7343 were identified as differentially expressed. In the case of PacBio+Bambu, 7838 genes were identified as differentially expressed. Both methods identify roughly the same amount of genes as differentially expressed. 

```{r}
# overlay results of both technologies

de_genes_0.025 <- as.data.frame(cbind(decide_dif_s0.025, decide_dif_b0.025))
colnames(de_genes_0.025) <- c("Salmon_0.025", "Bambu_0.025")
upset(de_genes_0.025, sets = colnames(de_genes_0.025))
```

From the UpSet plot above it is visible that, even though identifying roughly the same number of genes as differentially expressed, the two technologies have same differences in their results. The majority of genes identified overlap, however, there is still are still some genes only called differentially expressed by either Illumina+Salmon or by PacBio+Bambu. To further investigate the similarities/differences, the logFC and p-values of the analysis was compared.

```{r}
# comparison of padj and logfc

padjS <- p.adjust(lrtS$table$PValue, method = "BH")
padjB <- p.adjust(lrtB$table$PValue, method = "BH")
padj <- data.frame(Salmon = padjS, Bambu = padjB)

logfcS <- lrtS$table$logFC.day5
logfcB <- lrtB$table$logFC.day5
logfc <- data.frame(Salmon = logfcS, Bambu = logfcB)

ggplot(data = padj, mapping = aes(x = -log10(Salmon), y = -log10(Bambu))) +
  geom_point() + 
  geom_smooth() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  scale_color_viridis() +
  labs(title = "Comparison of P-values (NDR=0.025)", x = "-log10 P-value (Salmon)", y = "-log10 P-value (Bambu)")

ggplot(data = logfc, mapping = aes(x = Salmon, y = Bambu)) +
  geom_point() + 
  geom_smooth() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  scale_color_viridis() +
  labs(title = "Comparison of LogFC (NDR=0.025)", x = "LogFC (Salmon)", y = "LogFC (Bambu)")
```

The comparison of the p-values after adjustment shows a similar trend in both technologies, but also same differences showing that the results differ. The same is observable for the logFC values. Additionally, it is visible that many genes that show no logFC in the analysis of one technology shows a (high) logFC in the other one, which agrees with the observation in the UpSet plot, that some genes are called differentially expressed by either of the two technologies, but not by both.

After performing the differential gene expression analysis over the whole time course, the first and the last time points were also compared as discrete conditions to identify up- or down-regulated genes only comparing the begin and the end of the experiment.

```{r}
# time point comparison

## Salmon
fit <- glmFit(y_salmon_0.025, design)
lrt <- glmLRT(fit, coef = 6)
decide_dif_s0.025_tp <-
  decideTests.DGELRT(lrt,
                     adjust.method = "BH",
                     p.value = 0.01,
                     lfc = log2(2))
summary(decide_dif_s0.025_tp)

ggplot(
  data = as.data.frame(lrt$table),
  mapping = aes(
    x = logFC,
    y = -log10(p.adjust(PValue, method = "BH")),
    color = as.factor(decide_dif_s0.025_tp)
  )
) +
  geom_point() +
  geom_vline(xintercept = log2(2), linetype = "dashed") +
  geom_vline(xintercept = -log2(2), linetype = "dashed") +
  geom_hline(yintercept = -log10(0.01), linetype = "dashed") +
  labs(
    title = "Differential gene expression Salmon 0.025 Day5-Day0",
    x = "LogFC",
    y = "-10log(p-value)",
    color = "DE"
  ) +
  scale_color_viridis_d() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

## Bambu
fit <- glmFit(y_bambu_0.025, design)
lrt <- glmLRT(fit, coef = 6)
decide_dif_b0.025_tp <-
  decideTests.DGELRT(lrt,
                     adjust.method = "BH",
                     p.value = 0.01,
                     lfc = log2(2))
summary(decide_dif_b0.025_tp)

ggplot(
  data = as.data.frame(lrt$table),
  mapping = aes(
    x = logFC,
    y = -log10(p.adjust(PValue, method = "BH")),
    color = as.factor(decide_dif_b0.025_tp)
  )
) +
  geom_point() +
  geom_vline(xintercept = log2(2), linetype = "dashed") +
  geom_vline(xintercept = -log2(2), linetype = "dashed") +
  geom_hline(yintercept = -log10(0.01), linetype = "dashed") +
  labs(
    title = "Differential gene expression Bambu 0.025 Day5-Day0",
    x = "LogFC",
    y = "-10log(p-value)",
    color = "DE"
  ) +
  scale_color_viridis_d() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))
```

The analysis identifies 2377 down-regulated and 4057 up-regulated genes for Illumian+Salmon and 2014 down-regulated and 3144 up-regulated genes for PacBio+Bambu. Again, 24717 genes were tested and both technologies show similar results.

### 0.05

The next NDR cutoff is 0.05. The same analysis steps that were performed for the NDR cutoff of 0.025 were performed here.

```{r}
# Salmon 0.05
y_salmon_0.05 <- calcNormFactors(y_salmon_0.05)
## estimate dispersion
y_salmon_0.05 <- estimateDisp(y_salmon_0.05, design)
## fit the negative binomial model
fit <- glmFit(y_salmon_0.05, design)
## conduct genewise statistical tests for a given coefficient contrast (coef = row of design matrix)
lrtS <- glmLRT(fit, coef = 2:6)
#topTags(lrt)
## multiple testing correction
decide_dif_s0.05 <-
  decideTests.DGELRT(lrtS,
                     adjust.method = "BH",
                     p.value = 0.01)
summary(decide_dif_s0.05)

# Bambu 0.05
y_bambu_0.05 <- calcNormFactors(y_bambu_0.05)
## estimate dispersion
y_bambu_0.05 <- estimateDisp(y_bambu_0.05, design)
## fit the negative binomial model
fit <- glmFit(y_bambu_0.05, design)
## conduct genewise statistical tests for a given coefficient contrast (coef = row of design matrix)
lrtB <- glmLRT(fit, coef = 2:6)
#topTags(lrt)
## multiple testing correction
decide_dif_b0.05 <-
  decideTests.DGELRT(lrtB,
                     adjust.method = "BH",
                     p.value = 0.01)
summary(decide_dif_b0.05)
```

For Illumina+Salmon, out of the 24811 tested genes, 7367 were identified as differentially expressed. In the case of PacBio+Bambu, 7884 genes were identified as differentially expressed. Both methods identify roughly the same amount of genes as differentially expressed. 

```{r}
# overlay results of both technologies

de_genes_0.05 <- as.data.frame(cbind(decide_dif_s0.05, decide_dif_b0.05))
colnames(de_genes_0.05) <- c("Salmon_0.05", "Bambu_0.05")
upset(de_genes_0.05, sets = colnames(de_genes_0.05))
```

The UpSet plot shows similar results compared to the NDR cutoff of 0.025. Again, the majority of genes are detected by both methods, however, some are deteced by either of the two methods.

```{r}
# comparison of padj and logfc

padjS <- p.adjust(lrtS$table$PValue, method = "BH")
padjB <- p.adjust(lrtB$table$PValue, method = "BH")
padj <- data.frame(Salmon = padjS, Bambu = padjB)

logfcS <- lrtS$table$logFC.day5
logfcB <- lrtB$table$logFC.day5
logfc <- data.frame(Salmon = logfcS, Bambu = logfcB)

ggplot(data = padj, mapping = aes(x = -log10(Salmon), y = -log10(Bambu))) +
  geom_point() + 
  geom_smooth() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  scale_color_viridis() +
  labs(title = "Comparison of P-values (NDR=0.05)", x = "-log10 P-value (Salmon)", y = "-log10 P-value (Bambu)")

ggplot(data = logfc, mapping = aes(x = Salmon, y = Bambu)) +
  geom_point() + 
  geom_smooth() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  scale_color_viridis() +
  labs(title = "Comparison of LogFC (NDR=0.05)", x = "LogFC (Salmon)", y = "LogFC (Bambu)")
```

The comparison of adjusted p-values and logFC values shows the same results as seen when performing the comparison on the results of the 0.025 NDR cutoff. 

```{r}
# time point comparison

## Salmon
fit <- glmFit(y_salmon_0.05, design)
lrt <- glmLRT(fit, coef = 6)
decide_dif_s0.05_tp <-
  decideTests.DGELRT(lrt,
                     adjust.method = "BH",
                     p.value = 0.01,
                     lfc = log2(2))
summary(decide_dif_s0.05_tp)

ggplot(
  data = as.data.frame(lrt$table),
  mapping = aes(
    x = logFC,
    y = -log10(p.adjust(PValue, method = "BH")),
    color = as.factor(decide_dif_s0.05_tp)
  )
) +
  geom_point() +
  geom_vline(xintercept = log2(2), linetype = "dashed") +
  geom_vline(xintercept = -log2(2), linetype = "dashed") +
  geom_hline(yintercept = -log10(0.01), linetype = "dashed") +
  labs(
    title = "Differential gene expression Salmon 0.05 Day5-Day0",
    x = "LogFC",
    y = "-10log(p-value)",
    color = "DE"
  ) +
  scale_color_viridis_d() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

## Bambu
fit <- glmFit(y_bambu_0.05, design)
lrt <- glmLRT(fit, coef = 6)
decide_dif_b0.05_tp <-
  decideTests.DGELRT(lrt,
                     adjust.method = "BH",
                     p.value = 0.01,
                     lfc = log2(2))
summary(decide_dif_b0.05_tp)

ggplot(
  data = as.data.frame(lrt$table),
  mapping = aes(
    x = logFC,
    y = -log10(p.adjust(PValue, method = "BH")),
    color = as.factor(decide_dif_b0.05_tp)
  )
) +
  geom_point() +
  geom_vline(xintercept = log2(2), linetype = "dashed") +
  geom_vline(xintercept = -log2(2), linetype = "dashed") +
  geom_hline(yintercept = -log10(0.01), linetype = "dashed") +
  labs(
    title = "Differential gene expression Bambu 0.05 Day5-Day0",
    x = "LogFC",
    y = "-10log(p-value)",
    color = "DE"
  ) +
  scale_color_viridis_d() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))
```

The differential expression analysis of day5 and day0 identifies 2388 down-regulated and 4071 up-regulated genes for Illumian+Salmon and 2031 down-regulated and 3172 up-regulated genes for PacBio+Bambu. Again, 24811 genes were tested and both technologies show similar results.

### 0.1

The next NDR cutoff is 0.1. The same analysis steps that were performed for the other NDR cutoffs were performed here as well.

```{r}
# Salmon 0.1
y_salmon_0.1 <- calcNormFactors(y_salmon_0.1)
## estimate dispersion
y_salmon_0.1 <- estimateDisp(y_salmon_0.1, design)
## fit the negative binomial model
fit <- glmFit(y_salmon_0.1, design)
## conduct genewise statistical tests for a given coefficient contrast (coef = row of design matrix)
lrtS <- glmLRT(fit, coef = 2:6)
#topTags(lrt)
## multiple testing correction
decide_dif_s0.1 <-
  decideTests.DGELRT(lrtS,
                     adjust.method = "BH",
                     p.value = 0.01)
summary(decide_dif_s0.1)

# Bambu 0.1
y_bambu_0.1 <- calcNormFactors(y_bambu_0.1)
## estimate dispersion
y_bambu_0.1 <- estimateDisp(y_bambu_0.1, design)
## fit the negative binomial model
fit <- glmFit(y_bambu_0.1, design)
## conduct genewise statistical tests for a given coefficient contrast (coef = row of design matrix)
lrtB <- glmLRT(fit, coef = 2:6)
#topTags(lrt)
## multiple testing correction
decide_dif_b0.1 <-
  decideTests.DGELRT(lrtB,
                     adjust.method = "BH",
                     p.value = 0.01)
summary(decide_dif_b0.1)
```

The differential expression analysis of the whole time course identified 7529 genes as differentially expressed for Illumina+Salmon and 8048 for PacBio+Bambu. 25104 genes were tested.

```{r}
# overlay results of both technologies

de_genes_0.1 <- as.data.frame(cbind(decide_dif_s0.1, decide_dif_b0.1))
colnames(de_genes_0.1) <- c("Salmon_0.1", "Bambu_0.1")
upset(de_genes_0.1, sets = colnames(de_genes_0.1))
```

When overlaying the results of the two technologies, it is again visible that most genes are detected by both methods, while some are deteced exclusively by one of them.

```{r}
# comparison of padj and logfc

padjS <- p.adjust(lrtS$table$PValue, method = "BH")
padjB <- p.adjust(lrtB$table$PValue, method = "BH")
padj <- data.frame(Salmon = padjS, Bambu = padjB)

logfcS <- lrtS$table$logFC.day5
logfcB <- lrtB$table$logFC.day5
logfc <- data.frame(Salmon = logfcS, Bambu = logfcB)

ggplot(data = padj, mapping = aes(x = -log10(Salmon), y = -log10(Bambu))) +
  geom_point() + 
  geom_smooth() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  scale_color_viridis() +
  labs(title = "Comparison of P-values (NDR=0.1)", x = "-log10 P-value (Salmon)", y = "-log10 P-value (Bambu)")

ggplot(data = logfc, mapping = aes(x = Salmon, y = Bambu)) +
  geom_point() + 
  geom_smooth() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  scale_color_viridis() +
  labs(title = "Comparison of LogFC (NDR=0.1)", x = "LogFC (Salmon)", y = "LogFC (Bambu)")
```

The comparison of adjusted p-values and logFC values shows the same trends as seen for the other NDR cutoffs.

```{r}
# time point comparison

## Salmon
fit <- glmFit(y_salmon_0.1, design)
lrt <- glmLRT(fit, coef = 6)
decide_dif_s0.1_tp <-
  decideTests.DGELRT(lrt,
                     adjust.method = "BH",
                     p.value = 0.01,
                     lfc = log2(2))
summary(decide_dif_s0.1_tp)

ggplot(
  data = as.data.frame(lrt$table),
  mapping = aes(
    x = logFC,
    y = -log10(p.adjust(PValue, method = "BH")),
    color = as.factor(decide_dif_s0.1_tp)
  )
) +
  geom_point() +
  geom_vline(xintercept = log2(2), linetype = "dashed") +
  geom_vline(xintercept = -log2(2), linetype = "dashed") +
  geom_hline(yintercept = -log10(0.01), linetype = "dashed") +
  labs(
    title = "Differential gene expression Salmon 0.1 Day5-Day0",
    x = "LogFC",
    y = "-10log(p-value)",
    color = "DE"
  ) +
  scale_color_viridis_d() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

## Bambu
fit <- glmFit(y_bambu_0.1, design)
lrt <- glmLRT(fit, coef = 6)
decide_dif_b0.1_tp <-
  decideTests.DGELRT(lrt,
                     adjust.method = "BH",
                     p.value = 0.01,
                     lfc = log2(2))
summary(decide_dif_b0.1_tp)

ggplot(
  data = as.data.frame(lrt$table),
  mapping = aes(
    x = logFC,
    y = -log10(p.adjust(PValue, method = "BH")),
    color = as.factor(decide_dif_b0.1_tp)
  )
) +
  geom_point() +
  geom_vline(xintercept = log2(2), linetype = "dashed") +
  geom_vline(xintercept = -log2(2), linetype = "dashed") +
  geom_hline(yintercept = -log10(0.01), linetype = "dashed") +
  labs(
    title = "Differential gene expression Bambu 0.1 Day5-Day0",
    x = "LogFC",
    y = "-10log(p-value)",
    color = "DE"
  ) +
  scale_color_viridis_d() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))
```

The time point differential expression analysis (day5 and day0) identified 2467 down-regulated and 4093 up-regulated genes for Illumina+Salmon and 2093 down-regulated and 3265 up-regulated genes for PacBio+Bambu. In total, 25104 were tested.

### 0.2

The last NDR cutoff is 0.2. Again, the same steps are performed.

```{r}
# Salmon 0.2
y_salmon_0.2 <- calcNormFactors(y_salmon_0.2)
## estimate dispersion
y_salmon_0.2 <- estimateDisp(y_salmon_0.2, design)
## fit the negative binomial model
fit <- glmFit(y_salmon_0.2, design)
## conduct genewise statistical tests for a given coefficient contrast (coef = row of design matrix)
lrtS <- glmLRT(fit, coef = 2:6)
## save lrt for pathway analysis
lrt_pathway <- lrtS
#topTags(lrt)
## multiple testing correction
decide_dif_s0.2 <-
  decideTests.DGELRT(lrtS,
                     adjust.method = "BH",
                     p.value = 0.01)
summary(decide_dif_s0.2)

# Bambu 0.2
y_bambu_0.2 <- calcNormFactors(y_bambu_0.2)
## estimate dispersion
y_bambu_0.2 <- estimateDisp(y_bambu_0.2, design)
## fit the negative binomial model
fit <- glmFit(y_bambu_0.2, design)
## conduct genewise statistical tests for a given coefficient contrast (coef = row of design matrix)
lrtB <- glmLRT(fit, coef = 2:6)
#topTags(lrt)
## multiple testing correction
decide_dif_b0.2 <-
  decideTests.DGELRT(lrtB,
                     adjust.method = "BH",
                     p.value = 0.01)
summary(decide_dif_b0.2)
```

The whole time course differential expression analysis identified 7723 deferentially expressed genes for Illumina+Salmon and 8345 for PacBio+Bambu. For the NDR cutoff of 0.2, 26012 genes were tested.

```{r}
# overlay results of both technologies

de_genes_0.2 <- as.data.frame(cbind(decide_dif_s0.2, decide_dif_b0.2))
colnames(de_genes_0.2) <- c("Salmon_0.2", "Bambu_0.2")
upset(de_genes_0.2, sets = colnames(de_genes_0.2))
```

```{r}
# comparison of padj and logfc

padjS <- p.adjust(lrtS$table$PValue, method = "BH")
padjB <- p.adjust(lrtB$table$PValue, method = "BH")
padj <- data.frame(Salmon = padjS, Bambu = padjB)

logfcS <- lrtS$table$logFC.day5
logfcB <- lrtB$table$logFC.day5
logfc <- data.frame(Salmon = logfcS, Bambu = logfcB)

ggplot(data = padj, mapping = aes(x = -log10(Salmon), y = -log10(Bambu))) +
  geom_point() + 
  geom_smooth() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  scale_color_viridis() +
  labs(title = "Comparison of P-values (NDR=0.2)", x = "-log10 P-value (Salmon)", y = "-log10 P-value (Bambu)")

ggplot(data = logfc, mapping = aes(x = Salmon, y = Bambu)) +
  geom_point() + 
  geom_smooth() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  scale_color_viridis() +
  labs(title = "Comparison of LogFC (NDR=0.2)", x = "LogFC (Salmon)", y = "LogFC (Bambu)")
```

The overlay of the results and the logFC/p-value comparsion showed similar results compared to the other NDR cutoffs.

```{r}
# time point comparison

## Salmon
fit <- glmFit(y_salmon_0.2, design)
lrt <- glmLRT(fit, coef = 6)
decide_dif_s0.2_tp <-
  decideTests.DGELRT(lrt,
                     adjust.method = "BH",
                     p.value = 0.01,
                     lfc = log2(2))
summary(decide_dif_s0.2_tp)

ggplot(
  data = as.data.frame(lrt$table),
  mapping = aes(
    x = logFC,
    y = -log10(p.adjust(PValue, method = "BH")),
    color = as.factor(decide_dif_s0.2_tp)
  )
) +
  geom_point() +
  geom_vline(xintercept = log2(2), linetype = "dashed") +
  geom_vline(xintercept = -log2(2), linetype = "dashed") +
  geom_hline(yintercept = -log10(0.01), linetype = "dashed") +
  labs(
    title = "Differential gene expression Salmon 0.2 Day5-Day0",
    x = "LogFC",
    y = "-10log(p-value)",
    color = "DE"
  ) +
  scale_color_viridis_d() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

## Bambu
fit <- glmFit(y_bambu_0.2, design)
lrt <- glmLRT(fit, coef = 6)
decide_dif_b0.2_tp <-
  decideTests.DGELRT(lrt,
                     adjust.method = "BH",
                     p.value = 0.01,
                     lfc = log2(2))
summary(decide_dif_b0.2_tp)

ggplot(
  data = as.data.frame(lrt$table),
  mapping = aes(
    x = logFC,
    y = -log10(p.adjust(PValue, method = "BH")),
    color = as.factor(decide_dif_b0.2_tp)
  )
) +
  geom_point() +
  geom_vline(xintercept = log2(2), linetype = "dashed") +
  geom_vline(xintercept = -log2(2), linetype = "dashed") +
  geom_hline(yintercept = -log10(0.01), linetype = "dashed") +
  labs(
    title = "Differential gene expression Bambu 0.2 Day5-Day0",
    x = "LogFC",
    y = "-10log(p-value)",
    color = "DE"
  ) +
  scale_color_viridis_d() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))
```

For the time point comparison, 2467 down-regulated and 4093 up-regulated genes for Illumina+Salmon and 2093 down-regulated and 3265 up-regulated genes for PacBio+Bambu were identified. In total, 26012 were tested.

The differential gene expression analysis mainly showed two things. First, it showed that the results of the different NDR cutoff rates are very similar, the main difference here is that more genes are in the data in the first place from the quantification. Second, it showed that the results of the two different technologies, Illumina+Salmon and PacBio+Bambu, are quite similar, but also show some differences. When treating the Illumina+Salmon data as the ground truth, it can be said that PacBio+Bambu is pretty close to the truth, but still shows some deviations.

Following a differential gene expression analysis, the identified genes can be grouped into gene sets of similar genes and a function or pathways analysis can be conducted using these gene sets. To do so, we decided to use only the genes that were detected by the analyses of both technologies, so the overlap which can be seen in the UpSet plot. Since the results of the different NDR cutoffs are very similar, we also decided to use only one of the cutoffs, namely the NDR cutoff of 0.2. This is the highest cutoff and therefore the data includes the most transcripts/genes.

## Grouping of DE genes

To group the differentially expressed genes, the average expression of each gene at each time point was calculated first. 

```{r}
# create a list of the genes called DE by both methods
s <- which(de_genes_0.2$Salmon_0.2 == 1)
b <- which(de_genes_0.2$Bambu_0.2 == 1)
s_b <- intersect(s, b)
DEG <- rownames(de_genes_0.2[s_b,])

# calculate the average expression of each gene at each time point (average of the replicates)
avg_expr <- as.data.frame(sapply(sort(unique(meta_samples$time))[c(1,4,6)], function(time) {
  rowMeans(salmon_0.2_gene[, which(meta_samples$time == time)])
}))

# for time points 1, 2 and 4, only one replicate exists
avg_expr$V4 <- unlist(as.vector(salmon_0.2_gene[, which(meta_samples$time == 1)]))
avg_expr$V5 <- unlist(as.vector(salmon_0.2_gene[, which(meta_samples$time == 2)]))
avg_expr$V6 <- unlist(as.vector(salmon_0.2_gene[, which(meta_samples$time == 4)]))

avg_expr <- avg_expr[, c(1,4,5,2,6,3)]

colnames(avg_expr) <- sort(unique(meta_samples$time))
```

The genes are then clustered using the their correlation as a distance measure (to be more exact: 1-correlation). The cluster dendrogram of the hierarchical clustering as well as a heat map of the correlation including the dendrogram are shown below.

```{r}
corr_DEG <- cor(t(avg_expr[DEG,]), method = "spearman")
hcl_DEG <- hclust(as.dist(1 - corr_DEG), method = "complete")
plot(hcl_DEG, label = FALSE)
```

```{r}
cl_DEG <- cutree(hcl_DEG, k = 4)
heatmap.2(corr_DEG, Rowv = as.dendrogram(hcl_DEG), Colv = as.dendrogram(hcl_DEG),
          trace = "none", scale = "none", labRow = NA, labCol = NA, col = viridis,
          ColSideColors = rainbow(15)[cl_DEG])
```

The genes were then split into 4 clusters by visual inspection, which can be seen in the plot above. The bar indicates the 4 clusters by different colors (yellow, red, green and orange). The average expression of the genes of the 4 clusters at each time point are shown below:

```{r}
avg_expr_DEG_list <- tapply(names(cl_DEG), cl_DEG, function(x) avg_expr[x,])
scaled_expr_DEG_list <- lapply(avg_expr_DEG_list, function(x) t(scale(t(x))))

layout(matrix(1:4, nrow = 2, byrow = T))
for(cl in 1:4)
  boxplot(scaled_expr_DEG_list[[cl]],
          main = paste0(cl, " (", nrow(scaled_expr_DEG_list[[cl]]), ")"))
```

The expression pattern of cluster 1 seems to follow a downwards trend, meaning that cluster 1 might contain mostly genes that are down-regulated over the time course. Clusters 2 and 3 show an upwards trend in expression, so these clusters might contain mostly genes that are up-regulated over the time course. Cluster 4 does not follow an apparent trend, there are many outliers visible in at all time points and the hight of the boxes seem to fluctuate rather than following a trend. Moreover, this cluster is also the smallest one.

For the following function and pathway analysis, the 4 clusters were used as gene sets.

## Function/Pathway analysis

The pathway analysis was performed using two different methods. First, the method DAVID was used, which is a frequency-based method. Second, the method GSEA was used, which is a ranked-based method.

### DAVID (frequency-based)

To perform DAVID on the 4 gene sets, the ensemble gene ids of the genes must be extracted and then written into text files, which are uploaded to the DAVID web tool. Since same of the newly discovered transcripts could not be mapped to an existing gene, there are some genes in the gene sets that do not have an ensemble gene id compatible with DAVID. These genes were therefore removed from the analysis. As explained in the methods part, the results of DAVID depend on the background gene set which is used during the analysis. Here, the background list contained all genes of the 0.2 NDR cutoff data after filtering, with the expection of newly identified genes.

```{r}
get_ensemble_id <- function(input_string) {
  ensemble_id_version <- unlist(strsplit(input_string, "\\."))
  return(ensemble_id_version[1])
}
input <- names(which(cl_DEG == 1))
names_cluster1 <- unname(sapply(input, get_ensemble_id))

input <- names(which(cl_DEG == 2))
names_cluster2 <- unname(sapply(input, get_ensemble_id))

input <- names(which(cl_DEG == 3))
names_cluster3 <- unname(sapply(input, get_ensemble_id))

input <- names(which(cl_DEG == 4))
names_cluster4 <- unname(sapply(input, get_ensemble_id))

input <- rownames(y_salmon_0.2)
background <- unname(sapply(input, get_ensemble_id))

write.table(
  names_cluster1[-which(startsWith(names_cluster1, "Bambu"))],
  file = "../genes_C1.txt",
  quote = F,
  row.names = F,
  col.names = F
)

write.table(
  names_cluster2,
  file = "../genes_C2.txt",
  quote = F,
  row.names = F,
  col.names = F
)

write.table(
  names_cluster3,
  file = "../genes_C3.txt",
  quote = F,
  row.names = F,
  col.names = F
)

write.table(
  names_cluster4,
  file = "../genes_C4.txt",
  quote = F,
  row.names = F,
  col.names = F
)

write.table(
  background[-which(startsWith(background, "Bambu"))],
  file = "../genes_expressed.txt",
  quote = F,
  row.names = F,
  col.names = F
)

```

The results were downloaded from the DAVID web tool as text files and contain terms describing the functions or pathways different genes are involved in. The results also contain other measures, like the count of genes of the input gene set that are associated with a specific term, as well as adjusted p-values showing the significance of this term in the input gene set. The results were then filtered by the adjusted p-values. The adjustment was conducted using the Benjamini-Hochberg method. Following, the results were sorted by their adjusted p-values in ascending order. 

```{r}
# import DAVID results
cluster1 <- read.csv("../DAVID/C1_expressed_background.txt", sep = "\t")
cluster2 <- read.csv("../DAVID/C2_expressed_background.txt", sep = "\t")
cluster3 <- read.csv("../DAVID/C3_expressed_background.txt", sep = "\t")
cluster4 <- read.csv("../DAVID/C4_expressed_background.txt", sep = "\t")

# get significant terms
cluster1_sig <- cluster1 %>%
  filter(Benjamini < 0.01) %>%
  arrange(Benjamini)

(cluster1_terms <- cluster1_sig$Term)

cluster2_sig <- cluster2 %>%
  filter(Benjamini < 0.01) %>%
  arrange(Benjamini)

(cluster2_terms <- cluster2_sig$Term)

cluster3_sig <- cluster3 %>%
  filter(Benjamini < 0.01) %>%
  arrange(Benjamini)

(cluster3_terms <- cluster3_sig$Term)

cluster4_sig <- cluster4 %>%
  filter(Benjamini < 0.01) %>%
  arrange(Benjamini)

(cluster4_terms <- cluster4_sig$Term)
```

The significant results for gene set 1 include associations with neurological functions and pathways, for instance signalling at the neurological synapse.

For gene set 2, many significant terms are found (250), which might be due to the large size of this gene set. The most significant terms included for instance Glycoprotein, Developmental Protein, Homeobox/domain and Extracellular Matrix.

The results of gene set 3 include associations with the cell surface and the cell membrane as well as cellular signalling and cell adhesion.

Lastly, the results of gene sets 4 again include more terms then the ones of gene sets 1 and 3, but less then gene set 2. This seems to be surprising when just looking at the sizes of the genes sets, since gene set 4 is with 680 genes by far the smallest gene set. However, as described above, the average expression of genes cluster 4 does not follow a trend similar to what can be observed in the other clusters, but it seems to fluctuate over the course of time. This might be be caused by cluster 4 being more heterogeneous than the other clusters, which could also explain why many more terms were found for this cluster than for clusters 1 and 3, even though they are larger. The significant terms of gene set 4 include functions related to the nucleus, DNA replication, transcription and translation.

When looking at all functions or pathways that DAVID found an association with, it seems like many different cellular components are involved in the changes over the course of time. 
...

### GSEA (ranked-based)

```{r}
top_genes <- topTags(lrt_pathway, n = nrow(y_salmon_0.2))
padj <- p.adjust(p = top_genes$table$PValue, method = "BH")
ranked_list_names <- unname(sapply(rownames(top_genes), get_ensemble_id))

ranked_list <- padj
names(ranked_list) <- ranked_list_names
```

```{r}
genesets <- msigdbr(species = "Homo sapiens", category = "C8")
genesets_list <- tapply(genesets$ensembl_gene, genesets$gs_name, list)

fgsea_kegg <- fgsea(
  pathways = genesets_list,
  stats = ranked_list,
  scoreType = "pos",
  minSize  = 15,
  maxSize  = 500
)

fgsea_kegg[order(NES, decreasing = T), ][1:10, 1:7]
```



















