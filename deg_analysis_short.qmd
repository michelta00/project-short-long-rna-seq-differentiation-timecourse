---
title: "Short-Long_RNAseq-Differentiation-Timecourse"
author: "Michel Tarnow"
date: today
format: 
    html:
      toc: true
      self-contained: true
      highlight-style: github
      code-line-numbers: true
editor_options: 
    chunk_output_type: inline
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Differential Gene Expression and Gene Set Analyes

## Methods

The differential gene expression and gene set analyses were performed in RStudio (Posit team (2023), version 2023.6.2.561, R version 4.3.1).

### Differntial Gene Expression Analysis

After an exploratory data analysis to compare the long- and short-read counts/TPMs, a differential gene expression analysis was conducted. Here the aim was twofold: first, the aim was to identify genes that are differentially expressed over the course of time, so over the course of the 5 days at which samples have been generated; second, the aim was to compare the results of the differential gene expression analysis of the Illumina+Salmon data (short-read data) with the results of the PacBio+Bambu data (long-read data). To do so, in total 8 different count data frames were analyzed. For each of the 4 NDR thresholds (0.025, 0.05, 0.1, 0.2), there are two different count data frames, one derived from Illumina+Salmon and one derived from PacBio+Bambu. For the analysis of differentially expressed genes, a standard pipeline from the R package `edgeR` (Robinson *et al*, 2010, R package version 3.42.4) was used. 

First, `DGEList` objects were created from the 8 count data frames and subsequent filtered was performed using the `filterByExpr` function. The function removes genes that do not have a sufficient count in a worthwhile number of samples. Next, scaling factors for the library sizes were computed first using the function `calcNormFactors` to obtain normalized effective library sizes. Following, the function `estimateDisp` was applied on the `DGEList` objects to calculate posterior dispersion estimates. To do so, the following formula was used to create a design matrix: `~ day`. Day specifies the day at which each sample was created, so days 0 to 5. Thus, the design matrix was created in a way that the first time point, day 0, is the baseline (intercept of the model). The next step was to fit a negative binomial generalized log-linear model to each gene. This was done using the function `glmFit`. Finally, a likelihood ratio test was performed using the function `glmLRT`. Here, the full model is compared to a reduced model which has values of zero for all coefficients but the baseline, so for days 1 to 5. For each gene, this computes p-values and other test statistics of the likelihood ratio test that were used afterwards to identify genes that show statistical significant differential expression. To find these genes, the function `decideTests.DGELRT` adjusted the p-values by the Benjamini-Hochberg method (Benjamini and Hochberg, 1995) and then filtered differentially expressed genes by a significance threshold of 0.01.

To compare the results for Illumina+Salmon with the results for PacBio+Bambu, an `UpSetR` (Gehlenborg, 2019, R package version 1.4.0) plot was created for each NDR threshold. This plot overlayed the genes called differentially expressed for the two different cases. Moreover, the p-values and logFC values (comparing day 0 and day 5) for each gene were compared using simple scatter plots.

Lastly, the differential expression pipeline described above was also applied to all data sets to compare the time points day 0 and day 5 discretely. To do so, the in the likelihood ratio test only the coefficient of day 5 in the reduced model was set to 0. 

### Grouping of Differentially Expressed Genes

After the differential gene expression analysis, the genes identified as differentially expressed were grouped into gene sets of similar genes. For this grouping, only the genes that were identified as differentially expressed by the analysis of both the Illumina+Salmon and the PacBio+Bambu data of the 0.2 NDR threshold were considered. Moreover, the genes were grouped depending on their Illumina+Salmon counts since these counts were treated as a ground truth to which the PacBio+Bambu counts were compared.

Of these genes, the average expression at each time point was calculated first, so the average of the samples of each time point. Then, all gene-gene Spearman-correlations were computed and *1-correlation* was used as the difference between two genes during hierarchical clustering. The results of the hierarchical clustering were then evaluated to group the genes into clusters. From visual inspection of a cluster dendrogram and a correlation heat map, the number of clusters was set manually. Lastly, the average expression of the genes of the clusters at each time point was calculated for each cluster.

The clusters were then used as gene sets for the following analysis of the functions or pathways that are associated with the genes identified as differentially expressed.

### Gene Set Analysis

To make sense of the genes that were called differentially expressed, they were first grouped into gene sets of similar genes (see above). These gene sets were then used as input for a function and pathway analysis. Here, the frequency-based method DAVID (Sherman *et al*, 2022, <https://david.ncifcrf.gov/home.jsp>) was employed.

The Database for Annotation, Visualization and Integrated Discovery (DAVID) tool is a web tool for functional annotation and enrichment analyses of gene sets, e.g. to find enriched gene ontology terms. To do so, the web tool requires the user to upload not only a list of genes, so the gene set of interest, but also another list of genes, the background. The tool then searches for functional annotations that are statistically overrepresented (enriched) in the gene set of interest compared to the background. Therefore, the choice of background can influence the results of the analysis. Here, the gene sets of interest were the clusters created during the grouping of the differentially expressed genes and as background all genes that remained after the filtering were used. The only exception to that are genes that were newly discovered during the transcript quantification since these genes do not have a valid ensemble gene ids which is a requirement of DAVID.

## Results

Since the differential expression analysis of the different NDR thresholds showed very similar results, only the 0.2 NDR threshold is shown here. The analysis of all 4 NDR thresholds can be found in the files `dge_analysis.html` and `dge_analysis.qmd`.

### Load packages

```{r message=FALSE, warning=FALSE, echo=TRUE}
library(tidyverse)
library(edgeR)
library(UpSetR)
library(viridis)
library(pheatmap)
library(gplots)
library(fgsea)
library(msigdbr)
library(patchwork)
```

### Load data

The data is loaded from RDS-objects that have been created with the `import_processing.qmd` file. For each of the 4 NDR thresholds (0.025, 0.05, 0.1, 0.2), two data frames containing the expression data (counts) of the two different technologies exist:

1. Illumina sequencing and Salmon quantification (short-read)
2. PacBio sequencing and Bambu quantification (long-read)

In total, this adds up to 8 different data frames. Each of these data frames contains 11 samples, which are replicates from one of six different time points. Each time point has 1-3 replicates. As stated above, in this file only the results of the 0.2 NDR threshold data is shown.

```{r}
df_list_bambu <- readRDS("../bambu.rds")
df_list_salmon <- readRDS("../salmon.rds")
df_list_meta <- readRDS("../meta.rds")
```

```{r}
bambu_0.2_gene <- df_list_bambu$bambu_0.2_gene
salmon_0.2_gene <- df_list_salmon$salmon_0.2_gene
(meta_samples <- df_list_meta$metadata)
```

### Create DGEList objects and filter expressed genes

The expression data was then filtered using the function `filterByExpr` to exclude genes that do not show high enough expression or do not show expression in enough samples.

```{r}
day <- factor(meta_samples$time)
```

```{r}
y_salmon_0.2 <- DGEList(counts = salmon_0.2_gene, group = day)
y_bambu_0.2 <- DGEList(counts = bambu_0.2_gene, group = day)

expressed_salmon <- filterByExpr(y_salmon_0.2)
expressed_bambu <- filterByExpr(y_bambu_0.2)

not_expressed <-
  intersect(names(expressed_salmon[!expressed_salmon]), names(expressed_bambu[!expressed_bambu]))

if (length(not_expressed) > 0) {
  y_salmon_0.2 <-
    y_salmon_0.2[-which(rownames(salmon_0.2_gene) %in% not_expressed), , keep.lib.sizes = FALSE]
  y_bambu_0.2 <-
    y_bambu_0.2[-which(rownames(bambu_0.2_gene) %in% not_expressed), , keep.lib.sizes = FALSE]
}
```

```{r}
dim(y_salmon_0.2) == dim(y_bambu_0.2)
```

### Differential Gene Expression Analysis

The differential gene expression analysis aims to identify genes that are differentially expressed over the time course. These results were computed here only for the 0.2 NDR threshold of both technologies, and were then overlayed to compare the two technologies, so the long-read and short-read sequencing.

The design matrix was created in a way that the first time point, `day0`, was used as a baseline (intercept of the model).

```{r}
# create design matrix
design <- model.matrix( ~ day)
design
```

The here presented NDR threshold is 0.2. The differential expression analysis was performed with `edgeR`, and genes were considered as differentially expressed if the adjusted p-value of the likelihood ratio test between the full and the reduced model was below 0.01. The p-value adjustment was performed using the Benjamini-Hochberg method.

```{r}
# Salmon 0.2
y_salmon_0.2 <- calcNormFactors(y_salmon_0.2)
## estimate dispersion
y_salmon_0.2 <- estimateDisp(y_salmon_0.2, design)
## fit the negative binomial model
fit <- glmFit(y_salmon_0.2, design)
## conduct genewise statistical tests for a given coefficient contrast (coef = row of design matrix)
lrtS <- glmLRT(fit, coef = 2:6)
## save lrt for pathway analysis
lrt_pathway <- lrtS
#topTags(lrt)
## multiple testing correction
decide_dif_s0.2 <-
  decideTests.DGELRT(lrtS,
                     adjust.method = "BH",
                     p.value = 0.01)
summary(decide_dif_s0.2)

# Bambu 0.2
y_bambu_0.2 <- calcNormFactors(y_bambu_0.2)
## estimate dispersion
y_bambu_0.2 <- estimateDisp(y_bambu_0.2, design)
## fit the negative binomial model
fit <- glmFit(y_bambu_0.2, design)
## conduct genewise statistical tests for a given coefficient contrast (coef = row of design matrix)
lrtB <- glmLRT(fit, coef = 2:6)
#topTags(lrt)
## multiple testing correction
decide_dif_b0.2 <-
  decideTests.DGELRT(lrtB,
                     adjust.method = "BH",
                     p.value = 0.01)
summary(decide_dif_b0.2)
```

For Illumina+Salmon, out of the 26012 tested genes, 7723 were identified as differentially expressed. In the case of PacBio+Bambu, 8345 genes were identified as differentially expressed. Both methods identified roughly the same amount of genes as differentially expressed. 

```{r}
# overlay results of both technologies

de_genes_0.2 <- as.data.frame(cbind(decide_dif_s0.2, decide_dif_b0.2))
colnames(de_genes_0.2) <- c("Salmon_0.2", "Bambu_0.2")
upset(de_genes_0.2, sets = colnames(de_genes_0.2))
```

From the UpSet plot above it is visible that, even though identifying roughly the same number of genes as differentially expressed, the two technologies show some differences in their results. The majority of genes identified overlap, however, there are still some genes only called differentially expressed by either Illumina+Salmon or by PacBio+Bambu. To further investigate the similarities/differences, the logFC and p-values of the analysis was compared. The p-values were calculated for the likelihood ratio test, the logFC values, however, were calculated for the discrete comparisons of the days 1-5 with day 0. Here, the logFC values of day 5 were compared.

```{r}
# comparison of padj and logfc

padjS <- p.adjust(lrtS$table$PValue, method = "BH")
padjB <- p.adjust(lrtB$table$PValue, method = "BH")
padj <- data.frame(Salmon = padjS, Bambu = padjB)

logfcS <- lrtS$table$logFC.day5
logfcB <- lrtB$table$logFC.day5
logfc <- data.frame(Salmon = logfcS, Bambu = logfcB)

plot_padj_0.2 <- ggplot(data = padj, mapping = aes(x = -log10(Salmon), y = -log10(Bambu))) +
  geom_point() + 
  geom_smooth() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  scale_color_viridis() +
  labs(title = "Comparison of P-values (NDR=0.2)", x = "-log10 P-value (Salmon)", y = "-log10 P-value (Bambu)")

plot_logfc_0.2 <- ggplot(data = logfc, mapping = aes(x = Salmon, y = Bambu)) +
  geom_point() + 
  geom_smooth() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  scale_color_viridis() +
  labs(title = "Comparison of LogFC (NDR=0.2)", x = "LogFC (Salmon)", y = "LogFC (Bambu)")

plot_comparison_0.2 <- plot_padj_0.2 + plot_logfc_0.2
plot_comparison_0.2
```

The comparison of the p-values after adjustment shows a similar trend in both technologies, but also some differences. The same is observable for the logFC values. Additionally, it is visible that many genes that show a logFC value of zero in the analysis of one technology show a (high) logFC value in the other one. This agrees with the observation made in the UpSet plot, that some genes are called differentially expressed by either of the two technologies, but not by both.

After performing the differential gene expression analysis over the whole time course, the first and the last time points (days 0 and 5) were compared as discrete conditions to identify up- or down-regulated genes only comparing the begin and the end of the experiment.

```{r}
# time point comparison

## Salmon
fit <- glmFit(y_salmon_0.2, design)
lrt <- glmLRT(fit, coef = 6)
decide_dif_s0.2_tp <-
  decideTests.DGELRT(lrt,
                     adjust.method = "BH",
                     p.value = 0.01,
                     lfc = log2(2))
summary(decide_dif_s0.2_tp)

plot_dge_0.2_salmon <- ggplot(
  data = as.data.frame(lrt$table),
  mapping = aes(
    x = logFC,
    y = -log10(p.adjust(PValue, method = "BH")),
    color = as.factor(decide_dif_s0.2_tp)
  )
) +
  geom_point() +
  geom_vline(xintercept = log2(2), linetype = "dashed") +
  geom_vline(xintercept = -log2(2), linetype = "dashed") +
  geom_hline(yintercept = -log10(0.01), linetype = "dashed") +
  labs(
    title = "Differential gene expression \n Salmon 0.2 Day5-Day0",
    x = "LogFC",
    y = "-10log(p-value)",
    color = "DE"
  ) +
  scale_color_viridis_d() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

## Bambu
fit <- glmFit(y_bambu_0.2, design)
lrt <- glmLRT(fit, coef = 6)
decide_dif_b0.2_tp <-
  decideTests.DGELRT(lrt,
                     adjust.method = "BH",
                     p.value = 0.01,
                     lfc = log2(2))
summary(decide_dif_b0.2_tp)

plot_dge_0.2_bambu <- ggplot(
  data = as.data.frame(lrt$table),
  mapping = aes(
    x = logFC,
    y = -log10(p.adjust(PValue, method = "BH")),
    color = as.factor(decide_dif_b0.2_tp)
  )
) +
  geom_point() +
  geom_vline(xintercept = log2(2), linetype = "dashed") +
  geom_vline(xintercept = -log2(2), linetype = "dashed") +
  geom_hline(yintercept = -log10(0.01), linetype = "dashed") +
  labs(
    title = "Differential gene expression \n Bambu 0.2 Day5-Day0",
    x = "LogFC",
    y = "-10log(p-value)",
    color = "DE"
  ) +
  scale_color_viridis_d() +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

plot_dge_0.2 <- plot_dge_0.2_salmon + plot_dge_0.2_bambu
plot_dge_0.2
```

The analysis identified 2467 down-regulated and 4093 up-regulated genes for Illumian+Salmon and 2093 down-regulated and 3265 up-regulated genes for PacBio+Bambu. In total, 26012 genes were tested and both technologies show similar results.

The differential gene expression analysis mainly showed two things. First, it showed that the results of the different NDR thresholds were very similar, the main difference here was that more genes were in the data in the first place from the quantification (not shown here). Second, it showed that the results of the two different technologies, Illumina+Salmon and PacBio+Bambu, were quite similar, but still showed some differences. When treating the Illumina+Salmon data as the ground truth, it can be said that PacBio+Bambu is close to the truth, but still shows some deviations.

Following a differential gene expression analysis, the identified genes can be grouped into gene sets of similar genes and a function or pathways analysis can be conducted on these gene sets. To do so, only the genes that were detected by the analyses of both technologies were used, so the overlap which can be seen in the UpSet plot. Since the results of the different NDR thresholds were very similar, only one of the thresholds, namely the NDR threshold of 0.2, was used. This is the highest threshold and therefore the data includes the most novel transcripts/genes.

### Grouping of Differentially Expressed Genes

To group the differentially expressed genes, the average expression of each gene at each time point was calculated first. 

```{r}
# create a list of the genes called DE by both methods
s <- which(de_genes_0.2$Salmon_0.2 == 1)
b <- which(de_genes_0.2$Bambu_0.2 == 1)
s_b <- intersect(s, b)
DEG <- rownames(de_genes_0.2[s_b,])

# calculate the average expression of each gene at each time point (average of the replicates)
avg_expr <- as.data.frame(sapply(sort(unique(meta_samples$time))[c(1,4,6)], function(time) {
  rowMeans(salmon_0.2_gene[, which(meta_samples$time == time)])
}))

# for time points 1, 2 and 4, only one replicate exists
avg_expr$V4 <- unlist(as.vector(salmon_0.2_gene[, which(meta_samples$time == 1)]))
avg_expr$V5 <- unlist(as.vector(salmon_0.2_gene[, which(meta_samples$time == 2)]))
avg_expr$V6 <- unlist(as.vector(salmon_0.2_gene[, which(meta_samples$time == 4)]))

avg_expr <- avg_expr[, c(1,4,5,2,6,3)]

colnames(avg_expr) <- sort(unique(meta_samples$time))
```

The genes were then clustered using the their correlation as a distance measure (to be more precise: *1-correlation*). The cluster dendrogram of the hierarchical clustering as well as a heat map of the correlation including the dendrogram are shown below.

```{r}
corr_DEG <- cor(t(avg_expr[DEG,]), method = "spearman")
hcl_DEG <- hclust(as.dist(1 - corr_DEG), method = "complete")
plot(hcl_DEG, label = FALSE)
```

```{r}
cl_DEG <- cutree(hcl_DEG, k = 4)
heatmap.2(corr_DEG, Rowv = as.dendrogram(hcl_DEG), Colv = as.dendrogram(hcl_DEG),
          trace = "none", scale = "none", labRow = NA, labCol = NA, col = viridis,
          ColSideColors = rainbow(15)[cl_DEG])
```

The genes were then split into 4 clusters by visual inspection, which can be seen in the plot above. The bar indicates the 4 clusters by different colors (yellow, red, green and orange). The average expression of the genes of the 4 clusters at each time point are shown below:

```{r}
avg_expr_DEG_list <- tapply(names(cl_DEG), cl_DEG, function(x) avg_expr[x,])
scaled_expr_DEG_list <- lapply(avg_expr_DEG_list, function(x) t(scale(t(x))))

layout(matrix(1:4, nrow = 2, byrow = T))
for(cl in 1:4)
  boxplot(scaled_expr_DEG_list[[cl]],
          main = paste0(cl, " (", nrow(scaled_expr_DEG_list[[cl]]), ")"))
```

The expression pattern of cluster 1 seems to follow a downwards trend, meaning that cluster 1 might contain genes that are mostly down-regulated over the time course. Clusters 2 and 3 show an upwards trend in expression, so these clusters might contain mostly genes that are up-regulated over the time course. Cluster 4 does not follow an apparent trend, there are many outliers visible at all time points and the vertical position of the boxes seem to fluctuate rather than following a trend. Moreover, this cluster is also the smallest one.

For the following gene set analysis, the 4 clusters were used as gene sets.

### Gene Set Analysis

The gene set analysis was performed using the method DAVID, which is a frequency-based method and computes which gene ontology terms are significantly enriched in a gene set compared to a background.

To perform DAVID on the 4 gene sets, the ensemble gene ids of the genes must be extracted and then written into text files, which were then uploaded to the DAVID web tool. Since some of the newly discovered transcripts could not be mapped to an existing gene, there were some genes in the gene sets that did not have an ensemble gene id compatible with DAVID. These genes were therefore removed from the analysis. As explained in the methods part, the results of DAVID depend on the background gene set which is used during the analysis. Here, the background list contained all genes of the 0.2 NDR threshold data after filtering, with the exception of newly identified genes.

```{r}
get_ensemble_id <- function(input_string) {
  ensemble_id_version <- unlist(strsplit(input_string, "\\."))
  return(ensemble_id_version[1])
}
input <- names(which(cl_DEG == 1))
names_cluster1 <- unname(sapply(input, get_ensemble_id))

input <- names(which(cl_DEG == 2))
names_cluster2 <- unname(sapply(input, get_ensemble_id))

input <- names(which(cl_DEG == 3))
names_cluster3 <- unname(sapply(input, get_ensemble_id))

input <- names(which(cl_DEG == 4))
names_cluster4 <- unname(sapply(input, get_ensemble_id))

input <- rownames(y_salmon_0.2)
background <- unname(sapply(input, get_ensemble_id))

write.table(
  names_cluster1[-which(startsWith(names_cluster1, "Bambu"))],
  file = "../genes_C1.txt",
  quote = F,
  row.names = F,
  col.names = F
)

write.table(
  names_cluster2,
  file = "../genes_C2.txt",
  quote = F,
  row.names = F,
  col.names = F
)

write.table(
  names_cluster3,
  file = "../genes_C3.txt",
  quote = F,
  row.names = F,
  col.names = F
)

write.table(
  names_cluster4,
  file = "../genes_C4.txt",
  quote = F,
  row.names = F,
  col.names = F
)

write.table(
  background[-which(startsWith(background, "Bambu"))],
  file = "../genes_expressed.txt",
  quote = F,
  row.names = F,
  col.names = F
)

```

The results were downloaded from the DAVID web tool as text files and contain terms describing the functions or pathways different genes are involved in. The results also contain other measures, like the count of genes of the input gene set that are associated with a specific term, as well as adjusted p-values showing the significance of this term in the input gene set. The results were then filtered by the adjusted p-values. The adjustment was conducted using the Benjamini-Hochberg method. Following, the results were sorted by their adjusted p-values in ascending order. Below, the top 20 most enriched terms are shown for each cluster:

```{r}
# import DAVID results
cluster1 <- read.csv("../DAVID/C1_expressed_background.txt", sep = "\t")
cluster2 <- read.csv("../DAVID/C2_expressed_background.txt", sep = "\t")
cluster3 <- read.csv("../DAVID/C3_expressed_background.txt", sep = "\t")
cluster4 <- read.csv("../DAVID/C4_expressed_background.txt", sep = "\t")

# get significant terms
cluster1_sig <- cluster1 %>%
  filter(Benjamini < 0.01) %>%
  arrange(Benjamini)

cluster1_terms <- cluster1_sig$Term
print(cluster1_terms[1:20])

cluster2_sig <- cluster2 %>%
  filter(Benjamini < 0.01) %>%
  arrange(Benjamini)

cluster2_terms <- cluster2_sig$Term
print(cluster2_terms[1:20])

cluster3_sig <- cluster3 %>%
  filter(Benjamini < 0.01) %>%
  arrange(Benjamini)

cluster3_terms <- cluster3_sig$Term
print(cluster3_terms[1:20])

cluster4_sig <- cluster4 %>%
  filter(Benjamini < 0.01) %>%
  arrange(Benjamini)

cluster4_terms <- cluster4_sig$Term
print(cluster4_terms[1:20])
```

The significant results for gene set 1 include associations with neurological functions and pathways, for instance signalling at the neurological synapse. In total, 30 terms were identified as significantly enriched.

For gene set 2, many significantly enriched terms were found (in total 250), which might be due to the large size of this gene set. The most significant terms include for instance Glycoprotein, Developmental Protein, Homeobox/domain and Extracellular Matrix.

The results of gene set 3 include associations with the cell surface and the cell membrane as well as cellular signalling and cell adhesion. Here, 48 terms were found to be significantly enriched.

Lastly, the results of gene sets 4 again include more terms then the ones of gene sets 1 and 3, but less then gene set 2 (in total 130). This seems to be surprising when just looking at the sizes of the genes sets, since gene set 4 is with 680 genes by far the smallest gene set. However, as described above, the average expression of genes in cluster 4 does not follow a trend similar to what can be observed in the other clusters, but it seems to fluctuate over the course of time. This might be be caused by cluster 4 being more heterogeneous than the other clusters, which could also explain why many more terms were found for this cluster than for clusters 1 and 3, even though they are larger. The significant terms of gene set 4 include functions related to the nucleus, DNA replication, transcription and translation.

When looking at all functions or pathways that DAVID found an association with, it seems like many different cellular components are involved in the changes over the course of time. Especially for the larger clusters, many different gene ontology terms were significant. From this analysis, it is difficult to make assumptions about specific pathways or cellular functions that are up- or down-regulated over the course of time. However, it can be said that the treatment of the cells with differentiation factors possible effects many components of the cells.

## Discussion

### Differntial Gene Expression Analysis

The aim of the differential gene expression analysis was to identify genes that are differentially expressed over the course of time, and to compare these results of the Illumina+Salmon data (short-read data) with the results of the PacBio+Bambu data (long-read data) for 4 different NDR thresholds. 

When comparing the different NDR thresholds, only minor differences could be detected. This was expected since the main difference between the data sets of the different thresholds were the number of newly detected genes. What was also expected about the differential gene expression analysis was the quite large number of genes that were called differentially expressed. For all NDR thresholds, the fraction of genes called differentially expressed out of all analyzed genes was around 30%. This was not unexpected since the RNA samples came from induced pluripotent stem cells that were treated with differentiation factors.

The more interesting part was the comparison between the short-read data and the long-read data. The short-read data was produced from Illumina sequencing. Since Illumina sequencing has been in use for some time and therefore underwent lots of optimization, it is was treated as a ground truth in this project. The long read-data, however, was produced from PacBio sequencing, which suffers still from some biases, like a fragment length bias. Here, the data was produced using a new protocol, the MAS-ISO-seq protocol, which displays an optimization for PacBio sequencing. To evaluate this, the results of the PacBio data was compared to the Illumina data results. It could be shown that for both cases roughly the same amount of genes were identified as differentially expressed. However, when overlaying these genes, there were still many genes only called differentially expressed in one of the two cases. Moreover, when comparing the adjusted p-values and logFC values of the likelihood ratio tests, deviations between the two cases were visible. Nevertheless, a common trend could be detected, also for the differential gene expression when comparing only days 0 and 5. Together with the fact that the majority of differential expressed genes tend to be called by both methods, this shows that the analysis of the PacBio data already comes close to the truth, when treating Illumina as the truth. Due to the lack of PacBio data from older protocols, it is not possible to draw any conclusions regarding the improvement of this protocol compared to others.

### Grouping of Differentially Expressed Genes

The grouping of differentially expressed genes was only an intermediate step between the differential gene expression analysis and the gene set analysis. Nonetheless, it showed some interesting results and could possible influence the outcome of the gene set analysis.

The number of clusters/sets the genes were grouped in (here 4) was choosen more or less arbitrarily, mostly guided by visual inspection. Since the number of clusters was rather small, and the number of genes that were grouped was rather large, most of the clusters were rather large as well. The most clusters contained more than 1000 genes. Since the clusters were used as input gene sets for the gene set analysis, this choice possible effected the outcome of the gene set analysis and will therefore be discussed again in the context of the gene set analysis.

### Gene Set Analysis

The gene set analysis was performed with the aim of making sense of the genes that the differential gene expression analysis identified as differentially expressed. To do so, the detected differentially expressed genes were grouped into 4 gene sets, which were then used as input for the gene set analysis performed with the web tool DAVID.

For the gene set 1 and 3, around 30 to 50 gene ontology terms were found to be significantly enriched in the gene sets of about 1200 - 1500 genes. The terms for gene set 1 were mostly related to the neurological synapse and signalling between neurons, meaning that this cluster possible contains an enriched amount of genes involved in neurological signalling. For gene set 3, the terms were mostly related to the cell membrane, the cytoplasm and signal transduction. The terms found significant for these two gene sets were rather homogeneous. The same could be observed for gene set 4, which genes were found to be involved mostly in functions associated with the cell nucleus and RNA/DNA. Notably, the amount of terms that were detected to be significantly enriched in gene set 4 was much higher (130 terms) than in gene sets 1 and 3, even though gene set 4 was only around half the size of the other two (there are 680 genes in gene set 4). Assuming that more genes in a gene set usually lead to more terms to be found significant, this could mean that gene set 4 is less homogeneous than gene sets 1 and 3. In agreement with that, the average expression of genes in gene set 4 over time also shows more heterogeneity than observed in the other clusters. The largest gene set, gene set 2, shows the highest amount of significant terms (250 while containing 2158 genes). The results of this gene sets contain many terms associated with the Homeobox/Homeodomain and other developmental functions, but also with many other things like cell membrane/surface, signalling or the immune system. These results seem to be more heterogeneous than the results of the other 3 gene sets, which could be caused by the larger size of gene set 2 and/or by more heterogeneity between the genes of this gene set. To overcome this issue and get clearer results also for gene set 2, the number of clusters during the grouping of differentially expressed genes could have been choosen larger to create smaller and therefore possible more homogeneous gene sets. However, when cutting the tree with the `cutree` function, the largest cluster, so gene set 2, gets only notable smaller when setting the number of cluster to 13. At this point, many small clusters with less than 50 genes are created. Therefore, the number of clusters was left to be 4.

In general, the terms that were found to be significant by the gene set analysis for all gene sets cover a lot of different functions and pathways in the cell. This could be explained by the experimental conditions, and by the cell line that was used. The cell line, namely WTC-11 cells, are induced pluripotent stem cells and therefore posses embryonic stem cell-like properties and are of pluripotent nature. These cells were treated with differentiation factors, meaning that these factors drove the process of cellular differentiation, so the differentiation of a less specialized cell into a more specialized one. Thus, many different cellular function and pathways could be affected. Since many differentially expressed genes (the ones in gene set 1) were associated with neurological functions, the treatment possible included neurotrophic factors like *Nerve Growth Factor* (NGF) or *Brain-Derived Neurotrophic Factor* (BDNF).

## Literature

- Benjamini, Y. and Hochberg, Y. (1995), Controlling the False Discovery Rate: A Practical and Powerful Approach to Multiple Testing. Journal of the Royal Statistical Society: Series B (Methodological), 57: 289-300. 
- Gehlenborg N (2019). UpSetR: A More Scalable Alternative to Venn and Euler Diagrams for Visualizing Intersecting Sets. <https://CRAN.R-project.org/package=UpSetR>.
- Posit team (2023). RStudio: Integrated Development Environment for R. Posit Software, PBC, Boston, MA. URL <http://www.posit.co/>.
- Robinson MD, McCarthy DJ and Smyth GK (2010). edgeR: a Bioconductor package for differential expression analysis of digital gene expression data. Bioinformatics 26, 139-140.
- Sherman, B. T., Hao, M., Qiu, J., Jiao, X., Baseler, M. W., Lane, H. C., Imamichi, T., & Chang, W. (2022). DAVID: a web server for functional enrichment analysis and functional annotation of gene lists (2021 update). Nucleic acids research 50, 216-221. 

## Session Info and R Package Versions

```{r}
sessionInfo()
```













