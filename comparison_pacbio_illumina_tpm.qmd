---
title: "Comparison PacBio vs. Illumina tpm"
author: "Marie-Claire Indilewitsch"
date: today
format: 
    html:
      toc: true
      self-contained: true
      highlight-style: github
      code-line-numbers: true
editor_options: 
    chunk_output_type: inline
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Exploratory comparison PacBio (bambu) vs. Illumina (salmon) data 

## Methods

The exploratory comparison of PacBio vs. Illumina data was performed in RStudio (R version 4.3.2 (2023-10-31 ucrt)). 

First, the data was imported and preprocessed (see seperate import_processing.qmd). Hereby, the control sequences were filtered out and counts and transcripts-per-million (tpm) saved seperately for Illumina+Salmon (short read) data and PacBio+Bambu (long read) data. Further, the 16 different dataframes (8 for tpm, 8 for counts) were sorted to have the same order and saved in .rds files (bambu, salmon and metadata) which were then used for further analysis. Then a first direct exploratory analysis was performed to get an overview of the data. 

### Exploratory analysis 

The exploratory analysis was divided into a first direct comparison looking at the differences in the counts/tpm between Illumina+Salmon and PacBio+Bambu for all 4 NDR cutoffs (0.025, 0.05, 0.1, 0.2) and visualizing them with histograms, followed by the computation of correlations between the different samples of Illumina+Salmon and PacBio+Bambu also stratified by transcript length and lastly looking at the MDS plots. The whole analysis was performed for count data as well as tpm data but it was decided to keep the tpm in the report file as it is more representative when performing the stratification by length (further explained in discussion). But the count plots as well as all other tpm plots not shown in the following can be found in the file comparison_pacbio_illumina.qmd. 

#### Differences Illumina+Salmon vs. PacBio+Bambu 

First, the direct differences between the Illumina+Salmon and PacBio+Bambu dataframes were calculated and visualized using histograms to see how different the raw data is. The histograms were only plotted for the first column of the dataframe (sample 1) as plotting all columns would not lead to an increase in information. 

#### Correlation Illumina+Salmon vs. PacBio+Bambu 

Secondly, the correlation between Illumina+Salmon and PacBio+Bambu was looked at first not stratified by length and secondly, stratified by length on the transcript level (tpm) for all 4 NDR cutoffs. Hereby the samples were divided into 10 bins always portraing an interval of transcript length of 1000 (0-1000, 1000-2000 and so on). Thus, the bins do not have the same size. Both pearson and spearman correlation between all samples were performed and visualized in heatmaps but in the results we decided on showing only the spearman plots (explained in the discussion). For all 10 bins the correlations were summed up and shown in a scatter plot to see the effect of transcript length for all 4 NDR cutoffs. 

#### MDS plots 

Lastly, the MDS plots were plotted for all 8 dataframes (here we used the count dataframes again) to compare the sample distribution between Illumina+Salmon and PacBio+bambu. 

## Results 

### Load packages

```{r message=FALSE, warning=FALSE}
library(tidyverse)
library(viridis)
library(pheatmap)
library(ggplot2)
library(edgeR)
library(limma)
library(patchwork)
library(cowplot)
```

### Load data

The data is loaded from RDS-object files from bambu, salmon and the metadata (from import_processing.qmd). For each of the 4 NDR cutoffs (0.025, 0.05, 0.1, 0.2), two data frames exist containing the expression data (counts) as well as transcript-per-million (tpm) of the two different technologies used to obtain the data:

    Illumina sequencing and Salmon quantification (short read)
    PacBio sequencing and Bambu quantification (long read)

In total, this adds up to 16 different data frames. Each of these data frames contains 11 samples, which are replicates from one of five different time points. Each time point has 1-3 replicates.

```{r}
df_list_bambu <- readRDS("bambu.rds")
df_list_salmon <- readRDS("salmon.rds")
df_list_meta <- readRDS("meta.rds")
```

```{r}
bambu_0.025 <- df_list_bambu$bambu_0.025_tpm
bambu_0.05 <- df_list_bambu$bambu_0.05_tpm
bambu_0.1 <- df_list_bambu$bambu_0.1_tpm
bambu_0.2 <- df_list_bambu$bambu_0.2_tpm

salmon_0.025 <- df_list_salmon$salmon_0.025_tpm
salmon_0.05 <- df_list_salmon$salmon_0.05_tpm
salmon_0.1 <- df_list_salmon$salmon_0.1_tpm
salmon_0.2 <- df_list_salmon$salmon_0.2_tpm

bambu_0.025_gene <- df_list_bambu$bambu_0.025_tpm_gene
bambu_0.05_gene <- df_list_bambu$bambu_0.05_tpm_gene
bambu_0.1_gene <- df_list_bambu$bambu_0.1_tpm_gene
bambu_0.2_gene <- df_list_bambu$bambu_0.2_tpm_gene

salmon_0.025_gene <- df_list_salmon$salmon_0.025_tpm_gene
salmon_0.05_gene <- df_list_salmon$salmon_0.05_tpm_gene
salmon_0.1_gene <- df_list_salmon$salmon_0.1_tpm_gene
salmon_0.2_gene <- df_list_salmon$salmon_0.2_tpm_gene

bambu_0.025_count <- df_list_bambu$bambu_0.025
bambu_0.05_count <- df_list_bambu$bambu_0.05
bambu_0.1_count <- df_list_bambu$bambu_0.1
bambu_0.2_count <- df_list_bambu$bambu_0.2

salmon_0.025_count <- df_list_salmon$salmon_0.025
salmon_0.05_count <- df_list_salmon$salmon_0.05
salmon_0.1_count <- df_list_salmon$salmon_0.1
salmon_0.2_count <- df_list_salmon$salmon_0.2

bambu_0.025_gene_count <- df_list_bambu$bambu_0.025_gene
bambu_0.05_gene_count <- df_list_bambu$bambu_0.05_gene
bambu_0.1_gene_count <- df_list_bambu$bambu_0.1_gene
bambu_0.2_gene_count <- df_list_bambu$bambu_0.2_gene

salmon_0.025_gene_count <- df_list_salmon$salmon_0.025_gene
salmon_0.05_gene_count <- df_list_salmon$salmon_0.05_gene
salmon_0.1_gene_count <- df_list_salmon$salmon_0.1_gene
salmon_0.2_gene_count <- df_list_salmon$salmon_0.2_gene

meta_samples <- df_list_meta$metadata
```

## Differences 

The differences between Illumina+Salmon and PacBio+Bambu have been computed in a direct comparison and it was calculated how many percent had a difference smaller than 50 (just to get an overview of the raw differences). 

```{r}
difference1 <- salmon_0.025 - bambu_0.025
nrow(salmon_0.025[which(rowSums(abs(difference1)) < 50), ])/nrow(salmon_0.025)

difference2 <- salmon_0.05- bambu_0.05
nrow(salmon_0.05[which(rowSums(abs(difference2)) < 50), ])/nrow(salmon_0.05)

difference3 <- salmon_0.1 - bambu_0.1
nrow(salmon_0.1[which(rowSums(abs(difference3)) < 50), ])/nrow(salmon_0.1)

difference4 <- salmon_0.2 - bambu_0.2
nrow(salmon_0.2[which(rowSums(abs(difference4)) < 50), ])/nrow(salmon_0.2)

difference1_gene <- salmon_0.025_gene- bambu_0.025_gene
nrow(salmon_0.025_gene[which(rowSums(abs(difference1_gene)) < 50), ])/nrow(salmon_0.025_gene)

difference2_gene <- salmon_0.05_gene- bambu_0.05_gene
nrow(salmon_0.05_gene[which(rowSums(abs(difference2_gene)) < 50), ])/nrow(salmon_0.05_gene)

difference3_gene <- salmon_0.1_gene - bambu_0.1_gene
nrow(salmon_0.1_gene[which(rowSums(abs(difference3_gene)) < 50), ])/nrow(salmon_0.1_gene)

difference4_gene <- salmon_0.2_gene - bambu_0.2_gene
nrow(salmon_0.2_gene[which(rowSums(abs(difference4_gene)) < 50), ])/nrow(salmon_0.2_gene)


```
On the transcript level the differences are under 50 for always around 92% of the transcripts for all the NDR cutoffs and for the gene level around 85% for all the NDR cutoffs. 

## Histograms of differences 

This was then visualized for always the first column. Here we only show the plots for the 0.025 and 0.05 cutoffs on transcript and gene level because all 8 histograms all look almost the same. The rest can be seen in the comparison_pacbio_illumia.qmd file. 

```{r, warning = FALSE}
#only always performed on first column

diff1 <- ggplot(difference1, aes(x = difference1[,1])) +
  geom_histogram(binwidth = 10, fill = "blue", color = "black", alpha = 0.7)+
  xlim(-100,200)+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 8)) +
  scale_color_viridis() +
  labs(title = "Difference between bambu and salmon 0.025", x = "difference", y = "freq")

diff2 <- ggplot(difference2, aes(x = difference2[,1])) +
  geom_histogram(binwidth = 10, fill = "blue", color = "black", alpha = 0.7)+
  xlim(-100,200)+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 8)) +
  scale_color_viridis() +
  labs(title = "Difference between bambu and salmon 0.05", x = "difference", y = "freq")

diff3 <- ggplot(difference1_gene, aes(x = difference1_gene[,1])) +
  geom_histogram(binwidth = 10, fill = "blue", color = "black", alpha = 0.7)+
  xlim(-100,200)+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 8)) +
  scale_color_viridis() +
  labs(title = "Difference between bambu and salmon 0.025 gene level", x = "difference", y = "freq")


diff4 <- ggplot(difference2_gene, aes(x = difference2_gene[,1])) +
  geom_histogram(binwidth = 10, fill = "blue", color = "black", alpha = 0.7)+
  xlim(-100,200)+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 8)) +
  scale_color_viridis() +
  labs(title = "Difference between bambu and salmon 0.05 gene level", x = "difference", y = "freq")

plot1 <- diff1 + diff2 + diff3 + diff4
plot1

```
As one can see, the most differences are around 0 (highest bar) with small bars around it. Thus, when just looking at the raw data the difference between Illumina+Salmon and PacBio+Bambu is small. 

## Correlation and stratification by length 

Next, the correlation between Illumina+Salmon and PacBio+Bambu was computed. For that, first the trasncript lengths were exported as well as their distribution looked at to be able to divide them into sections for the stratification by transcript length. 

```{r, warning = FALSE}
#get length and filter by it 
samples <- list.files("data/") 
samples <- samples[grep(pattern = "0.025_salmon", x = samples)]


file <- paste0("data/", samples[1], "/", "quant.sf")
quant <- read.csv(file, sep = "\t", header = T)
length <- quant$Length

#distribution of lengths 
ggplot(quant, aes(x = Length)) +
  geom_histogram(binwidth = 100, fill = "blue", color = "black", alpha = 0.7)+
  xlim(0,10000)+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  scale_color_viridis() +
  labs(title = "Transcript length distribution", x = "transcript length", y = "freq")

#dividing length into subsets based on plotted distribution 
quant_below_1000 <- quant[quant$Length < 1000, ]
quant_1000_2000 <- quant[quant$Length >= 1000 & quant$Length < 2000, ]
quant_2000_3000 <- quant[quant$Length >= 2000 & quant$Length < 3000, ]
quant_3000_4000 <- quant[quant$Length >= 3000 & quant$Length < 4000, ]
quant_4000_5000 <- quant[quant$Length >= 4000 & quant$Length < 5000, ]
quant_5000_6000 <- quant[quant$Length >= 5000 & quant$Length < 6000, ]
quant_6000_7000 <- quant[quant$Length >= 6000 & quant$Length < 7000, ]
quant_7000_8000 <- quant[quant$Length >= 7000 & quant$Length < 8000, ]
quant_8000_9000 <- quant[quant$Length >= 8000 & quant$Length < 9000, ]
quant_9000_10000 <- quant[quant$Length >= 9000 & quant$Length < 10000, ]
```

As seen in the above plot, most transcripts have a length between 0 and around 2000 and at arounf 10000 almost no transcripts can be found. So, we decided on dividing the lengths into intervals of 1000 from 0 to 10000. Here it is of note, that the intervals do not contain the same amount of transcripts so the bins have different sizes.

So first, the correlation not stratified by length was plotted. We performed both pearson- and spearman-correlation but we will only show one pearson plot here and only the first two NDR cutoffs for demonstration purposes (this will be talked about in the discussion). 

```{r}
#correlation not stratified by length

#pearson 
cor_0.025 <- cor(bambu_0.025, salmon_0.025)
pheatmap(cor_0.025, cluster_rows = FALSE, cluster_cols = FALSE, main="Correlation 0.025 pearson")

# spearman 
cor_0.025_sp <- cor(bambu_0.025, salmon_0.025, method = 'spearman')
cor_0.05_sp <- cor(bambu_0.05, salmon_0.05, method = 'spearman')
cor_0.025_gene_sp <- cor(bambu_0.025_gene, salmon_0.025_gene, method = 'spearman')
cor_0.05_gene_sp <- cor(bambu_0.05_gene, salmon_0.05_gene, method = 'spearman')


heat1 <- pheatmap(cor_0.025_sp, cluster_rows = FALSE, cluster_cols = FALSE, main = "Correlation 0.025")
heat2 <- pheatmap(cor_0.05_sp, cluster_rows = FALSE, cluster_cols = FALSE, main = "Correlation 0.05")
heat3 <- pheatmap(cor_0.025_gene_sp, cluster_rows = FALSE, cluster_cols = FALSE, main = "Correlation 0.025 gene level")
heat4 <- pheatmap(cor_0.05_gene_sp, cluster_rows = FALSE, cluster_cols = FALSE, main = "Correlation 0.05 gene level")

```

The heatmap for the pearson correlation looks unusal as not every sample is highest correlated with itself and the spearman heatmaps look similar between the cutoffs but there is lower correlation on the gene level compared to the transcript level. Also the day 2 and day3 bambu samples seem to be highly corrlated also with the day 4 and day 5 salmon samples. 

Then, the correlation stratified by length was plotted for all 4 NDR cutoffs. For the purpose of no further information gain we will only show one pearson plot again and then representitavely one heatmap (for one bin) for each NDR cutoff ( we chose 1000-2000 as its the most abundant transcript length) as well as all 4 scatterplots of the summed up correlation stratified by length. 

```{r message = FALSE}
#0.025 
bambu_0.025_below_1000 <- subset(bambu_0.025, rownames(bambu_0.025) %in% quant_below_1000$Name)
salmon_0.025_below_1000 <- subset(salmon_0.025, rownames(salmon_0.025) %in% quant_below_1000$Name)

bambu_0.025_1000_2000 <- subset(bambu_0.025, rownames(bambu_0.025) %in% quant_1000_2000$Name)
salmon_0.025_1000_2000 <- subset(salmon_0.025, rownames(salmon_0.025) %in% quant_1000_2000$Name)

bambu_0.025_2000_3000 <- subset(bambu_0.025, rownames(bambu_0.025) %in% quant_2000_3000$Name)
salmon_0.025_2000_3000 <- subset(salmon_0.025, rownames(salmon_0.025) %in% quant_2000_3000$Name)

bambu_0.025_3000_4000 <- subset(bambu_0.025, rownames(bambu_0.025) %in% quant_3000_4000$Name)
salmon_0.025_3000_4000 <- subset(salmon_0.025, rownames(salmon_0.025) %in% quant_3000_4000$Name)

bambu_0.025_4000_5000 <- subset(bambu_0.025, rownames(bambu_0.025) %in% quant_4000_5000$Name)
salmon_0.025_4000_5000 <- subset(salmon_0.025, rownames(salmon_0.025) %in% quant_4000_5000$Name)

bambu_0.025_5000_6000 <- subset(bambu_0.025, rownames(bambu_0.025) %in% quant_5000_6000$Name)
salmon_0.025_5000_6000 <- subset(salmon_0.025, rownames(salmon_0.025) %in% quant_5000_6000$Name)

bambu_0.025_6000_7000 <- subset(bambu_0.025, rownames(bambu_0.025) %in% quant_6000_7000$Name)
salmon_0.025_6000_7000 <- subset(salmon_0.025, rownames(salmon_0.025) %in% quant_6000_7000$Name)

bambu_0.025_7000_8000 <- subset(bambu_0.025, rownames(bambu_0.025) %in% quant_7000_8000$Name)
salmon_0.025_7000_8000 <- subset(salmon_0.025, rownames(salmon_0.025) %in% quant_7000_8000$Name)

bambu_0.025_8000_9000 <- subset(bambu_0.025, rownames(bambu_0.025) %in% quant_8000_9000$Name)
salmon_0.025_8000_9000 <- subset(salmon_0.025, rownames(salmon_0.025) %in% quant_8000_9000$Name)

bambu_0.025_9000_10000 <- subset(bambu_0.025, rownames(bambu_0.025) %in% quant_9000_10000$Name)
salmon_0.025_9000_10000 <- subset(salmon_0.025, rownames(salmon_0.025) %in% quant_9000_10000$Name)




cor_0.025_below_1000 <- cor(bambu_0.025_below_1000, salmon_0.025_below_1000)
cor_0.025_1000_2000 <- cor(bambu_0.025_1000_2000, salmon_0.025_1000_2000)
cor_0.025_2000_3000 <- cor(bambu_0.025_2000_3000, salmon_0.025_2000_3000)
cor_0.025_3000_4000 <- cor(bambu_0.025_3000_4000, salmon_0.025_3000_4000)
cor_0.025_4000_5000 <- cor(bambu_0.025_4000_5000, salmon_0.025_4000_5000)

cor_0.025_5000_6000 <- cor(bambu_0.025_5000_6000, salmon_0.025_5000_6000)
cor_0.025_6000_7000 <- cor(bambu_0.025_6000_7000, salmon_0.025_6000_7000)
cor_0.025_7000_8000 <- cor(bambu_0.025_7000_8000, salmon_0.025_7000_8000)
cor_0.025_8000_9000 <- cor(bambu_0.025_8000_9000, salmon_0.025_8000_9000)
cor_0.025_9000_10000 <- cor(bambu_0.025_9000_10000, salmon_0.025_9000_10000)

sum1 <- sum(as.matrix(cor_0.025_below_1000))
sum2 <- sum(as.matrix(cor_0.025_1000_2000))
sum3 <- sum(as.matrix(cor_0.025_2000_3000))
sum4 <- sum(as.matrix(cor_0.025_3000_4000))
sum5 <- sum(as.matrix(cor_0.025_4000_5000))
sum6 <- sum(as.matrix(cor_0.025_5000_6000))
sum7 <- sum(as.matrix(cor_0.025_6000_7000))
sum8 <- sum(as.matrix(cor_0.025_7000_8000))
sum9 <- sum(as.matrix(cor_0.025_8000_9000))
sum10 <- sum(as.matrix(cor_0.025_9000_10000))


pheatmap(cor_0.025_1000_2000, cluster_rows = FALSE, cluster_cols = FALSE, main = "Correlation transcript length 1000-2000 pearson ")


sums_df <- data.frame(
  Range = c(1000,2000,3000,4000,5000,6000,7000,8000,9000,10000),
  Sum = c(sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9, sum10)
)


ggplot(sums_df, aes(x = Range, y = Sum)) +
  geom_point(color = "blue", size = 3) +
  labs(title = "Scatterplot of summed up pearson correlations stratified by transcript length", x = "Range of transcript length", y = "Summed up orrelation")+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  scale_color_viridis() +
  stat_smooth(method="lm", col = "red", lty = 2)


cor_0.025_below_1000_sp <- cor(bambu_0.025_below_1000, salmon_0.025_below_1000, method = 'spearman')
cor_0.025_1000_2000_sp <- cor(bambu_0.025_1000_2000, salmon_0.025_1000_2000, method = 'spearman')
cor_0.025_2000_3000_sp <- cor(bambu_0.025_2000_3000, salmon_0.025_2000_3000, method = 'spearman')
cor_0.025_3000_4000_sp <- cor(bambu_0.025_3000_4000, salmon_0.025_3000_4000, method = 'spearman')
cor_0.025_4000_5000_sp <- cor(bambu_0.025_4000_5000, salmon_0.025_4000_5000, method = 'spearman')

cor_0.025_5000_6000_sp <- cor(bambu_0.025_5000_6000, salmon_0.025_5000_6000, method = 'spearman')
cor_0.025_6000_7000_sp <- cor(bambu_0.025_6000_7000, salmon_0.025_6000_7000, method = 'spearman')
cor_0.025_7000_8000_sp <- cor(bambu_0.025_7000_8000, salmon_0.025_7000_8000, method = 'spearman')
cor_0.025_8000_9000_sp <- cor(bambu_0.025_8000_9000, salmon_0.025_8000_9000, method = 'spearman')
cor_0.025_9000_10000_sp <- cor(bambu_0.025_9000_10000, salmon_0.025_9000_10000, method = 'spearman')

sum1_sp <- sum(as.matrix(cor_0.025_below_1000_sp))
sum2_sp <- sum(as.matrix(cor_0.025_1000_2000_sp))
sum3_sp <- sum(as.matrix(cor_0.025_2000_3000_sp))
sum4_sp <- sum(as.matrix(cor_0.025_3000_4000_sp))
sum5_sp <- sum(as.matrix(cor_0.025_4000_5000_sp))
sum6_sp <- sum(as.matrix(cor_0.025_5000_6000_sp))
sum7_sp <- sum(as.matrix(cor_0.025_6000_7000_sp))
sum8_sp <- sum(as.matrix(cor_0.025_7000_8000_sp))
sum9_sp <- sum(as.matrix(cor_0.025_8000_9000_sp))
sum10_sp <- sum(as.matrix(cor_0.025_9000_10000_sp))


#pheatmap(cor_0.025_below_1000_sp, cluster_rows = FALSE, cluster_cols = FALSE)
pheatmap(cor_0.025_1000_2000_sp, cluster_rows = FALSE, cluster_cols = FALSE,  main = "Correlation transcript length 1000-2000 spearman")
#pheatmap(cor_0.025_2000_3000_sp, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.025_3000_4000_sp, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.025_4000_5000_sp, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.025_5000_6000_sp, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.025_6000_7000_sp, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.025_7000_8000_sp, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.025_8000_9000_sp, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.025_9000_10000_sp, cluster_rows = FALSE, cluster_cols = FALSE)

sums_df_sp <- data.frame(
  Range = c(1000,2000,3000,4000,5000,6000,7000,8000,9000,10000),
  Sum = c(sum1_sp, sum2_sp, sum3_sp, sum4_sp, sum5_sp, sum6_sp, sum7_sp, sum8_sp, sum9_sp, sum10_sp)
)


scatter1 <- ggplot(sums_df_sp, aes(x = Range, y = Sum)) +
  geom_point(color = "blue", size = 3) +
  labs(title = "0.025", x = "Range", y = "Correlation")+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 9)) +
  scale_color_viridis() +
  stat_smooth(method="lm", col = "red", lty = 2)


```

```{r}
#0.05
bambu_0.05_below_1000 <- subset(bambu_0.05, rownames(bambu_0.05) %in% quant_below_1000$Name)
salmon_0.05_below_1000 <- subset(salmon_0.05, rownames(salmon_0.05) %in% quant_below_1000$Name)

bambu_0.05_1000_2000 <- subset(bambu_0.05, rownames(bambu_0.05) %in% quant_1000_2000$Name)
salmon_0.05_1000_2000 <- subset(salmon_0.05, rownames(salmon_0.05) %in% quant_1000_2000$Name)

bambu_0.05_2000_3000 <- subset(bambu_0.05, rownames(bambu_0.05) %in% quant_2000_3000$Name)
salmon_0.05_2000_3000 <- subset(salmon_0.05, rownames(salmon_0.05) %in% quant_2000_3000$Name)

bambu_0.05_3000_4000 <- subset(bambu_0.05, rownames(bambu_0.05) %in% quant_3000_4000$Name)
salmon_0.05_3000_4000 <- subset(salmon_0.05, rownames(salmon_0.05) %in% quant_3000_4000$Name)

bambu_0.05_4000_5000 <- subset(bambu_0.05, rownames(bambu_0.05) %in% quant_4000_5000$Name)
salmon_0.05_4000_5000 <- subset(salmon_0.05, rownames(salmon_0.05) %in% quant_4000_5000$Name)

bambu_0.05_5000_6000 <- subset(bambu_0.05, rownames(bambu_0.05) %in% quant_5000_6000$Name)
salmon_0.05_5000_6000 <- subset(salmon_0.05, rownames(salmon_0.05) %in% quant_5000_6000$Name)

bambu_0.05_6000_7000 <- subset(bambu_0.05, rownames(bambu_0.05) %in% quant_6000_7000$Name)
salmon_0.05_6000_7000 <- subset(salmon_0.05, rownames(salmon_0.05) %in% quant_6000_7000$Name)

bambu_0.05_7000_8000 <- subset(bambu_0.05, rownames(bambu_0.05) %in% quant_7000_8000$Name)
salmon_0.05_7000_8000 <- subset(salmon_0.05, rownames(salmon_0.05) %in% quant_7000_8000$Name)

bambu_0.05_8000_9000 <- subset(bambu_0.05, rownames(bambu_0.05) %in% quant_8000_9000$Name)
salmon_0.05_8000_9000 <- subset(salmon_0.05, rownames(salmon_0.05) %in% quant_8000_9000$Name)

bambu_0.05_9000_10000 <- subset(bambu_0.05, rownames(bambu_0.05) %in% quant_9000_10000$Name)
salmon_0.05_9000_10000 <- subset(salmon_0.05, rownames(salmon_0.05) %in% quant_9000_10000$Name)




cor_0.05_below_1000 <- cor(bambu_0.05_below_1000, salmon_0.05_below_1000, method = 'spearman')
cor_0.05_1000_2000 <- cor(bambu_0.05_1000_2000, salmon_0.05_1000_2000, method = 'spearman')
cor_0.05_2000_3000 <- cor(bambu_0.05_2000_3000, salmon_0.05_2000_3000, method = 'spearman')
cor_0.05_3000_4000 <- cor(bambu_0.05_3000_4000, salmon_0.05_3000_4000, method = 'spearman')
cor_0.05_4000_5000 <- cor(bambu_0.05_4000_5000, salmon_0.05_4000_5000, method = 'spearman')

cor_0.05_5000_6000 <- cor(bambu_0.05_5000_6000, salmon_0.05_5000_6000, method = 'spearman')
cor_0.05_6000_7000 <- cor(bambu_0.05_6000_7000, salmon_0.05_6000_7000, method = 'spearman')
cor_0.05_7000_8000 <- cor(bambu_0.05_7000_8000, salmon_0.05_7000_8000, method = 'spearman')
cor_0.05_8000_9000 <- cor(bambu_0.05_8000_9000, salmon_0.05_8000_9000, method = 'spearman')
cor_0.05_9000_10000 <- cor(bambu_0.05_9000_10000, salmon_0.05_9000_10000, method = 'spearman')


#pheatmap(cor_0.05_below_1000, cluster_rows = FALSE, cluster_cols = FALSE)
pheatmap(cor_0.05_1000_2000, cluster_rows = FALSE, cluster_cols = FALSE,  main = "Correlation transcript length 1000-2000 spearman")
#pheatmap(cor_0.05_2000_3000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.05_3000_4000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.05_4000_5000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.05_5000_6000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.05_6000_7000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.05_7000_8000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.05_8000_9000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.05_9000_10000, cluster_rows = FALSE, cluster_cols = FALSE)

sum1_0.05 <- sum(as.matrix(cor_0.05_below_1000))
sum2_0.05 <- sum(as.matrix(cor_0.05_1000_2000))
sum3_0.05 <- sum(as.matrix(cor_0.05_2000_3000))
sum4_0.05 <- sum(as.matrix(cor_0.05_3000_4000))
sum5_0.05 <- sum(as.matrix(cor_0.05_4000_5000))
sum6_0.05 <- sum(as.matrix(cor_0.05_5000_6000))
sum7_0.05 <- sum(as.matrix(cor_0.05_6000_7000))
sum8_0.05 <- sum(as.matrix(cor_0.05_7000_8000))
sum9_0.05 <- sum(as.matrix(cor_0.05_8000_9000))
sum10_0.05 <- sum(as.matrix(cor_0.05_9000_10000))
sums_df_0.05 <- data.frame(
  Range = c(1000,2000,3000,4000,5000,6000,7000,8000,9000,10000),
  Sum = c(sum1_0.05, sum2_0.05, sum3_0.05, sum4_0.05, sum5_0.05, sum6_0.05, sum7_0.05, sum8_0.05, sum9_0.05, sum10_0.05)
)


scatter2 <- ggplot(sums_df_0.05, aes(x = Range, y = Sum)) +
  geom_point(color = "blue", size = 3) +
  labs(title = "0.05", x = "Range", y = "Correlation")+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 9)) +
  scale_color_viridis() +
  stat_smooth(method="lm", col = "red", lty = 2)

```

```{r}
#0.1
bambu_0.1_below_1000 <- subset(bambu_0.1, rownames(bambu_0.1) %in% quant_below_1000$Name)
salmon_0.1_below_1000 <- subset(salmon_0.1, rownames(salmon_0.1) %in% quant_below_1000$Name)

bambu_0.1_1000_2000 <- subset(bambu_0.1, rownames(bambu_0.1) %in% quant_1000_2000$Name)
salmon_0.1_1000_2000 <- subset(salmon_0.1, rownames(salmon_0.1) %in% quant_1000_2000$Name)

bambu_0.1_2000_3000 <- subset(bambu_0.1, rownames(bambu_0.1) %in% quant_2000_3000$Name)
salmon_0.1_2000_3000 <- subset(salmon_0.1, rownames(salmon_0.1) %in% quant_2000_3000$Name)

bambu_0.1_3000_4000 <- subset(bambu_0.1, rownames(bambu_0.1) %in% quant_3000_4000$Name)
salmon_0.1_3000_4000 <- subset(salmon_0.1, rownames(salmon_0.1) %in% quant_3000_4000$Name)

bambu_0.1_4000_5000 <- subset(bambu_0.1, rownames(bambu_0.1) %in% quant_4000_5000$Name)
salmon_0.1_4000_5000 <- subset(salmon_0.1, rownames(salmon_0.1) %in% quant_4000_5000$Name)

bambu_0.1_5000_6000 <- subset(bambu_0.1, rownames(bambu_0.1) %in% quant_5000_6000$Name)
salmon_0.1_5000_6000 <- subset(salmon_0.1, rownames(salmon_0.1) %in% quant_5000_6000$Name)

bambu_0.1_6000_7000 <- subset(bambu_0.1, rownames(bambu_0.1) %in% quant_6000_7000$Name)
salmon_0.1_6000_7000 <- subset(salmon_0.1, rownames(salmon_0.1) %in% quant_6000_7000$Name)

bambu_0.1_7000_8000 <- subset(bambu_0.1, rownames(bambu_0.1) %in% quant_7000_8000$Name)
salmon_0.1_7000_8000 <- subset(salmon_0.1, rownames(salmon_0.1) %in% quant_7000_8000$Name)

bambu_0.1_8000_9000 <- subset(bambu_0.1, rownames(bambu_0.1) %in% quant_8000_9000$Name)
salmon_0.1_8000_9000 <- subset(salmon_0.1, rownames(salmon_0.1) %in% quant_8000_9000$Name)

bambu_0.1_9000_10000 <- subset(bambu_0.1, rownames(bambu_0.1) %in% quant_9000_10000$Name)
salmon_0.1_9000_10000 <- subset(salmon_0.1, rownames(salmon_0.1) %in% quant_9000_10000$Name)




cor_0.1_below_1000 <- cor(bambu_0.1_below_1000, salmon_0.1_below_1000, method = 'spearman')
cor_0.1_1000_2000 <- cor(bambu_0.1_1000_2000, salmon_0.1_1000_2000, method = 'spearman')
cor_0.1_2000_3000 <- cor(bambu_0.1_2000_3000, salmon_0.1_2000_3000, method = 'spearman')
cor_0.1_3000_4000 <- cor(bambu_0.1_3000_4000, salmon_0.1_3000_4000, method = 'spearman')
cor_0.1_4000_5000 <- cor(bambu_0.1_4000_5000, salmon_0.1_4000_5000, method = 'spearman')

cor_0.1_5000_6000 <- cor(bambu_0.1_5000_6000, salmon_0.1_5000_6000, method = 'spearman')
cor_0.1_6000_7000 <- cor(bambu_0.1_6000_7000, salmon_0.1_6000_7000, method = 'spearman')
cor_0.1_7000_8000 <- cor(bambu_0.1_7000_8000, salmon_0.1_7000_8000, method = 'spearman')
cor_0.1_8000_9000 <- cor(bambu_0.1_8000_9000, salmon_0.1_8000_9000, method = 'spearman')
cor_0.1_9000_10000 <- cor(bambu_0.1_9000_10000, salmon_0.1_9000_10000, method = 'spearman')


#pheatmap(cor_0.1_below_1000, cluster_rows = FALSE, cluster_cols = FALSE)
pheatmap(cor_0.1_1000_2000, cluster_rows = FALSE, cluster_cols = FALSE,  main = "Correlation transcript length 1000-2000 spearman")
#pheatmap(cor_0.1_2000_3000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.1_3000_4000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.1_4000_5000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.1_5000_6000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.1_6000_7000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.1_7000_8000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.1_8000_9000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.1_9000_10000, cluster_rows = FALSE, cluster_cols = FALSE)

sum1_0.1 <- sum(as.matrix(cor_0.1_below_1000))
sum2_0.1 <- sum(as.matrix(cor_0.1_1000_2000))
sum3_0.1 <- sum(as.matrix(cor_0.1_2000_3000))
sum4_0.1 <- sum(as.matrix(cor_0.1_3000_4000))
sum5_0.1 <- sum(as.matrix(cor_0.1_4000_5000))
sum6_0.1 <- sum(as.matrix(cor_0.1_5000_6000))
sum7_0.1 <- sum(as.matrix(cor_0.1_6000_7000))
sum8_0.1 <- sum(as.matrix(cor_0.1_7000_8000))
sum9_0.1 <- sum(as.matrix(cor_0.1_8000_9000))
sum10_0.1 <- sum(as.matrix(cor_0.1_9000_10000))
sums_df_0.1 <- data.frame(
  Range = c(1000,2000,3000,4000,5000,6000,7000,8000,9000,10000),
  Sum = c(sum1_0.1, sum2_0.1, sum3_0.1, sum4_0.1, sum5_0.1, sum6_0.1, sum7_0.1, sum8_0.1, sum9_0.1, sum10_0.1)
)


scatter3 <- ggplot(sums_df_0.1, aes(x = Range, y = Sum)) +
  geom_point(color = "blue", size = 3) +
  labs(title = "0.1", x = "Range", y = "Correlation")+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 9)) +
  scale_color_viridis()+
  stat_smooth(method="lm", col = "red", lty = 2)
```

```{r}
#0.2
bambu_0.2_below_1000 <- subset(bambu_0.2, rownames(bambu_0.2) %in% quant_below_1000$Name)
salmon_0.2_below_1000 <- subset(salmon_0.2, rownames(salmon_0.2) %in% quant_below_1000$Name)

bambu_0.2_1000_2000 <- subset(bambu_0.2, rownames(bambu_0.2) %in% quant_1000_2000$Name)
salmon_0.2_1000_2000 <- subset(salmon_0.2, rownames(salmon_0.2) %in% quant_1000_2000$Name)

bambu_0.2_2000_3000 <- subset(bambu_0.2, rownames(bambu_0.2) %in% quant_2000_3000$Name)
salmon_0.2_2000_3000 <- subset(salmon_0.2, rownames(salmon_0.2) %in% quant_2000_3000$Name)

bambu_0.2_3000_4000 <- subset(bambu_0.2, rownames(bambu_0.2) %in% quant_3000_4000$Name)
salmon_0.2_3000_4000 <- subset(salmon_0.2, rownames(salmon_0.2) %in% quant_3000_4000$Name)

bambu_0.2_4000_5000 <- subset(bambu_0.2, rownames(bambu_0.2) %in% quant_4000_5000$Name)
salmon_0.2_4000_5000 <- subset(salmon_0.2, rownames(salmon_0.2) %in% quant_4000_5000$Name)

bambu_0.2_5000_6000 <- subset(bambu_0.2, rownames(bambu_0.2) %in% quant_5000_6000$Name)
salmon_0.2_5000_6000 <- subset(salmon_0.2, rownames(salmon_0.2) %in% quant_5000_6000$Name)

bambu_0.2_6000_7000 <- subset(bambu_0.2, rownames(bambu_0.2) %in% quant_6000_7000$Name)
salmon_0.2_6000_7000 <- subset(salmon_0.2, rownames(salmon_0.2) %in% quant_6000_7000$Name)

bambu_0.2_7000_8000 <- subset(bambu_0.2, rownames(bambu_0.2) %in% quant_7000_8000$Name)
salmon_0.2_7000_8000 <- subset(salmon_0.2, rownames(salmon_0.2) %in% quant_7000_8000$Name)

bambu_0.2_8000_9000 <- subset(bambu_0.2, rownames(bambu_0.2) %in% quant_8000_9000$Name)
salmon_0.2_8000_9000 <- subset(salmon_0.2, rownames(salmon_0.2) %in% quant_8000_9000$Name)

bambu_0.2_9000_10000 <- subset(bambu_0.2, rownames(bambu_0.2) %in% quant_9000_10000$Name)
salmon_0.2_9000_10000 <- subset(salmon_0.2, rownames(salmon_0.2) %in% quant_9000_10000$Name)




cor_0.2_below_1000 <- cor(bambu_0.2_below_1000, salmon_0.2_below_1000, method = 'spearman')
cor_0.2_1000_2000 <- cor(bambu_0.2_1000_2000, salmon_0.2_1000_2000, method = 'spearman')
cor_0.2_2000_3000 <- cor(bambu_0.2_2000_3000, salmon_0.2_2000_3000, method = 'spearman')
cor_0.2_3000_4000 <- cor(bambu_0.2_3000_4000, salmon_0.2_3000_4000, method = 'spearman')
cor_0.2_4000_5000 <- cor(bambu_0.2_4000_5000, salmon_0.2_4000_5000, method = 'spearman')
cor_0.2_5000_6000 <- cor(bambu_0.2_5000_6000, salmon_0.2_5000_6000, method = 'spearman')
cor_0.2_6000_7000 <- cor(bambu_0.2_6000_7000, salmon_0.2_6000_7000, method = 'spearman')
cor_0.2_7000_8000 <- cor(bambu_0.2_7000_8000, salmon_0.2_7000_8000, method = 'spearman')
cor_0.2_8000_9000 <- cor(bambu_0.2_8000_9000, salmon_0.2_8000_9000, method = 'spearman')
cor_0.2_9000_10000 <- cor(bambu_0.2_9000_10000, salmon_0.2_9000_10000, method = 'spearman')

#pheatmap(cor_0.2_below_1000, cluster_rows = FALSE, cluster_cols = FALSE)
pheatmap(cor_0.2_1000_2000, cluster_rows = FALSE, cluster_cols = FALSE,  main = "Correlation transcript length 1000-2000 spearman")
#pheatmap(cor_0.2_2000_3000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.2_3000_4000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.2_4000_5000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.2_5000_6000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.2_6000_7000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.2_7000_8000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.2_8000_9000, cluster_rows = FALSE, cluster_cols = FALSE)
#pheatmap(cor_0.2_9000_10000, cluster_rows = FALSE, cluster_cols = FALSE)

sum1_0.2 <- sum(as.matrix(cor_0.2_below_1000))
sum2_0.2 <- sum(as.matrix(cor_0.2_1000_2000))
sum3_0.2 <- sum(as.matrix(cor_0.2_2000_3000))
sum4_0.2 <- sum(as.matrix(cor_0.2_3000_4000))
sum5_0.2 <- sum(as.matrix(cor_0.2_4000_5000))
sum6_0.2 <- sum(as.matrix(cor_0.2_5000_6000))
sum7_0.2 <- sum(as.matrix(cor_0.2_6000_7000))
sum8_0.2 <- sum(as.matrix(cor_0.2_7000_8000))
sum9_0.2 <- sum(as.matrix(cor_0.2_8000_9000))
sum10_0.2 <- sum(as.matrix(cor_0.2_9000_10000))
sums_df_0.2 <- data.frame(
  Range = c(1000,2000,3000,4000,5000,6000,7000,8000,9000,10000),
  Sum = c(sum1_0.2, sum2_0.2, sum3_0.2, sum4_0.2, sum5_0.2, sum6_0.2, sum7_0.2, sum8_0.2, sum9_0.2, sum10_0.2)
)


scatter4 <- ggplot(sums_df_0.2, aes(x = Range, y = Sum)) +
  geom_point(color = "blue", size = 3) +
  labs(title = "0.2", x = "Range", y = "Correlation")+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 9)) +
  scale_color_viridis()+
  stat_smooth(method="lm", col = "red", lty = 2)

scatter_total <- scatter1 + scatter2 + scatter3 + scatter4
scatter_total <- scatter_total +
  plot_layout(nrow = 2, byrow = TRUE) +
  plot_annotation(title = "Scatterplots of summed up correlations stratified by range of transcript lengths")
scatter_total
```

## MDS

```{r}
group <- factor(df_list_meta$metadata$time)

## Salmon 0.025
y_salmon_0.025 <- DGEList(counts = salmon_0.025_count, group = group)

mds <- plotMDS(y_salmon_0.025, plot = FALSE) # uses plotMDS.DGEList

df <- data.frame(
  MDS1 = mds$x,
  MDS2 = mds$y,
  group = group,
  shortname = df_list_meta$metadata$condition
)
mds1 <- ggplot(df, aes(x = MDS1, y = MDS2, colour = group)) +
  geom_point(size = 4) +
  geom_text(aes(label = shortname), vjust = -1, size = 3) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(title = "MDS Salmon 0.025", color = "Group") +
  scale_color_viridis_d()

## Bambu 0.025
y_bambu_0.025 <- DGEList(counts = bambu_0.025_count, group = group)

mds <- plotMDS(y_bambu_0.025, plot = FALSE) # uses plotMDS.DGEList

df <- data.frame(
  MDS1 = mds$x,
  MDS2 = mds$y,
  group = group,
  shortname = df_list_meta$metadata$condition
)
mds2 <- ggplot(df, aes(x = MDS1, y = MDS2, colour = group)) +
  geom_point(size = 4) +
  geom_text(aes(label = shortname), vjust = -1, size = 3) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(title = "MDS Bambu 0.025", color = "Group") +
  scale_color_viridis_d()


## Salmon 0.05
y_salmon_0.05 <- DGEList(counts = salmon_0.05_count, group = group)

mds <- plotMDS(y_salmon_0.05, plot = FALSE) # uses plotMDS.DGEList

df <- data.frame(
  MDS1 = mds$x,
  MDS2 = mds$y,
  group = group,
  shortname = df_list_meta$metadata$condition
)
mds3 <- ggplot(df, aes(x = MDS1, y = MDS2, colour = group)) +
  geom_point(size = 4) +
  geom_text(aes(label = shortname), vjust = -1, size = 3) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(title = "MDS Salmon 0.05", color = "Group") +
  scale_color_viridis_d()

## Bambu 0.05
y_bambu_0.05 <- DGEList(counts = bambu_0.05_count, group = group)

mds <- plotMDS(y_bambu_0.05, plot = FALSE) # uses plotMDS.DGEList

df <- data.frame(
  MDS1 = mds$x,
  MDS2 = mds$y,
  group = group,
  shortname = df_list_meta$metadata$condition
)
mds4 <- ggplot(df, aes(x = MDS1, y = MDS2, colour = group)) +
  geom_point(size = 4) +
  geom_text(aes(label = shortname), vjust = -1, size = 3) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(title = "MDS Bambu 0.05", color = "Group") +
  scale_color_viridis_d()

## Salmon 0.1
y_salmon_0.1 <- DGEList(counts = salmon_0.1_count, group = group)

mds <- plotMDS(y_salmon_0.1, plot = FALSE) # uses plotMDS.DGEList

df <- data.frame(
  MDS1 = mds$x,
  MDS2 = mds$y,
  group = group,
  shortname = df_list_meta$metadata$condition
)
mds5<- ggplot(df, aes(x = MDS1, y = MDS2, colour = group)) +
  geom_point(size = 4) +
  geom_text(aes(label = shortname), vjust = -1, size = 3) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(title = "MDS Salmon 0.1", color = "Group") +
  scale_color_viridis_d()

## Bambu 0.1
y_bambu_0.1 <- DGEList(counts = bambu_0.1_count, group = group)

mds <- plotMDS(y_bambu_0.1, plot = FALSE) # uses plotMDS.DGEList

df <- data.frame(
  MDS1 = mds$x,
  MDS2 = mds$y,
  group = group,
  shortname = df_list_meta$metadata$condition
)
mds6 <- ggplot(df, aes(x = MDS1, y = MDS2, colour = group)) +
  geom_point(size = 4) +
  geom_text(aes(label = shortname), vjust = -1, size = 3) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(title = "MDS Bambu 0.1", color = "Group") +
  scale_color_viridis_d()

## Salmon 0.2
y_salmon_0.2 <- DGEList(counts = salmon_0.2_count, group = group)

mds <- plotMDS(y_salmon_0.2, plot = FALSE) # uses plotMDS.DGEList

df <- data.frame(
  MDS1 = mds$x,
  MDS2 = mds$y,
  group = group,
  shortname = df_list_meta$metadata$condition
)
mds7 <- ggplot(df, aes(x = MDS1, y = MDS2, colour = group)) +
  geom_point(size = 4) +
  geom_text(aes(label = shortname), vjust = -1, size = 3) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(title = "MDS Salmon 0.2", color = "Group") +
  scale_color_viridis_d()

## Bambu 0.2
y_bambu_0.2 <- DGEList(counts = bambu_0.2_count, group = group)

mds <- plotMDS(y_bambu_0.2, plot = FALSE) # uses plotMDS.DGEList

df <- data.frame(
  MDS1 = mds$x,
  MDS2 = mds$y,
  group = group,
  shortname = df_list_meta$metadata$condition
)
mds8 <- ggplot(df, aes(x = MDS1, y = MDS2, colour = group)) +
  geom_point(size = 4) +
  geom_text(aes(label = shortname), vjust = -1, size = 3) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(title = "MDS Bambu 0.2", color = "Group") +
  scale_color_viridis_d()

mdstotal1 <- mds1 + mds2 
mdstotal2 <- mds3 + mds4 
mdstotal1
mdstotal2

```
